{"version":3,"sources":["resources/img/logo_gears_drawing_192.png","resources/firebase/firebase.ts","components/forms/fields/state.tsx","components/navbar/Navbar.tsx","pages/Overview.tsx","components/buttons/AddButton.tsx","components/Center.tsx","components/buttons/SaveButton.tsx","components/buttons/BackButton.tsx","components/buttons/DeleteButton.tsx","components/forms/fields/InputField.tsx","components/forms/fields/InputTextField.tsx","components/forms/fields/InputTextFieldWithValidation.tsx","components/forms/fields/InputNumberField.tsx","components/forms/fields/InputNumberFieldWithValidation.tsx","components/forms/fields/SelectField.tsx","components/forms/fields/SelectNumberField.tsx","utils/array.tsx","components/forms/ExerciseForm.tsx","components/forms/ExerciseFormWithValidation.tsx","components/buttons/EditButton.tsx","components/forms/ExerciseFormWithDialogsAndValidation.tsx","pages/Exercises.tsx","resources/firebase/exercises.tsx","pages/PageNotFound.tsx","components/Container.tsx","components/Login.tsx","resources/theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","State","useStyles","makeStyles","theme","grow","flexGrow","sideNavMenu","width","sideMenuImage","margin","pageNames","lastPartOfPath","path","pathParts","split","length","capitalizeFirstLetter","text","charAt","toUpperCase","slice","FixedAppBar","children","AppBar","position","Toolbar","SideMenuButton","useState","isOpen","setIsOpen","classes","toggleIsOpen","Hidden","lgUp","IconButton","color","aria-label","onClick","Menu","SwipeableDrawer","anchor","open","onClose","onOpen","className","List","ListItem","src","customFitLogo","alt","map","pageName","button","component","Link","to","process","ListItemText","primary","auth","signOut","MenuItems","mdDown","Button","NavBar","location","useLocation","lowerCaseLocationName","pathname","locationName","includes","Typography","variant","Overview","bigButton","fontSize","AddButton","AddCircle","centerContent","display","alignItems","justifyContent","Center","validationStyleFromState","state","styledBy","property","mapping","props","useValidationStyle","validation","palette","main","error","success","borderBottomColor","borderColor","SaveButton","Save","BackButton","ArrowBack","DeleteButton","Delete","InputField","label","errorText","inputType","value","onValueChange","min","max","step","style","useValidationStyleFromState","onChange","undefined","event","target","FormControl","required","fullWidth","InputLabel","Input","type","inputProps","FormHelperText","ERROR","InputTextField","InputTextFieldWithValidation","onValidationChange","minLength","maxLength","validityOfValue","SUCCESS","validity","newValidity","InputNumberField","InputNumberFieldWithValidation","onValidityChange","validityOfValueAsString","SelectField","possibleValues","Select","MenuItem","SelectNumberField","limitsToArray","maxInclusive","array","nElements","i","push","ExerciseForm","exercise","combinedStatus","combinedValidityParams","onClickBack","onClickSave","onClickDelete","pauseMinutes","Math","floor","pause","pauseSeconds","Card","CardContent","Grid","container","spacing","item","xs","name","reps","sets","toString","increment","weight","ExerciseFormWithValidation","initialExercise","initialCombinedStatus","onClickSaveValidated","onClickDeleteValidated","PRIMARY","temporaryExercise","setTemporaryExercise","setCombinedStatus","isFieldValid","prop","areAllValid","toStatus","EditButton","Edit","ExerciseFormWithDialogsAndValidation","onClickAdd","onClickEdit","shouldConfirmSaving","isDeleteDialogOpen","setIsDeleteDialogOpen","onCloseDeleteDialog","exerciseToPossiblySave","setExerciseToPossibleSave","isSaveDialogOpen","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","ExerciseParameter","Box","fontWeight","ExerciseCard","storedExercise","CardActionArea","gutterBottom","Exercises","isFormOpen","setIsFormOpen","selectedExercise","setSelectedExercise","storedExercises","exercises","setExercises","useEffect","user","currentUser","unsubscribe","firestore","collection","where","uid","onSnapshot","snapshot","docs","doc","id","data","useStoredExercises","onClickExercise","storedExxercise","onClickFormBack","onClickFormAdd","console","log","exerciseDoc","add","addExerciseToStore","update","editExerciseInStore","delete","mt","sm","md","lg","xl","CircularProgress","usePageNotFoundStyle","textAlign","PageNotFoundContent","paragraph","PageNotFound","Container","useStyle","LoginWaiting","LoginPrompt","uiConfig","autoUpgradeAnonymousUsers","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","firebaseui","AnonymousAuthProvider","callbacks","signInFailure","code","cred","credential","signInWithCredential","then","Promise","resolve","firebaseAuth","Login","setUser","onAuthStateChanged","createMuiTheme","blue","dark","background","default","grey","ChooseRoute","exact","App","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6951a05c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_gears_drawing_192.8df96554.png\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSsGGNtbJKdWhAJ-x8PCZpN5JIZii8x7M\",\r\n    authDomain: \"custom-fit-885d7.firebaseapp.com\",\r\n    databaseURL: \"https://custom-fit-885d7.firebaseio.com\",\r\n    projectId: \"custom-fit-885d7\",\r\n    storageBucket: \"custom-fit-885d7.appspot.com\",\r\n    messagingSenderId: \"504159396672\",\r\n    appId: \"1:504159396672:web:b995f81e096087eb\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { makeStyles, Theme } from '@material-ui/core';\r\n\r\nexport enum State {\r\n    PRIMARY = \"primary\",\r\n    ERROR = \"error\",\r\n    SUCCESS = \"success\"\r\n}\r\n\r\ninterface StateMapping {\r\n    primary: string;\r\n    error: string;\r\n    success: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface StyleProps {\r\n    state: State;\r\n    [key: string]: any;\r\n}\r\n\r\nexport const useValidationStyleFromState = (state: State) => {\r\n    const style = validationStyleFromState(state);\r\n    return useValidationStyle(style);\r\n}\r\n\r\nconst validationStyleFromState = (state: State) => {\r\n    const validationStyle: StyleProps = {state: state};\r\n    return validationStyle\r\n}\r\n\r\nconst styledBy = (property: string, mapping: StateMapping) => (props: StyleProps) => mapping[props[property]];\r\n\r\nconst useValidationStyle: (props: StyleProps) => Record<\"validation\", string> = makeStyles((theme: Theme) => ({\r\n    validation: {\r\n        '& label.Mui-focused': {\r\n            color: styledBy('state', {\r\n                primary: theme.palette.primary.main,\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            }),\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: styledBy('state', {\r\n                primary: theme.palette.primary.main,\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        // Colors when not in focus: \r\n        '& .MuiInput-underline:before': {\r\n            borderColor: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& .MuiInput-underline:hover:before': {\r\n            borderColor: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& label': {\r\n            color: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& .MuiFormHelperText-root': {\r\n            color: theme.palette.error.main\r\n        },\r\n    }\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { \r\n    AppBar, \r\n    Toolbar, \r\n    IconButton, \r\n    Typography, \r\n    Hidden, \r\n    Button, \r\n    makeStyles, \r\n    SwipeableDrawer, \r\n    ListItem, \r\n    List, \r\n    ListItemText\r\n} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons'\r\n\r\nimport customFitLogo from '../../resources/img/logo_gears_drawing_192.png'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport firebase from '../../resources/firebase/firebase';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sideNavMenu: {\r\n        width: 250\r\n    },\r\n    sideMenuImage: {\r\n        width: \"40%\",\r\n        margin: \"auto\"\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    const lowerCaseLocationName = lastPartOfPath(location.pathname);\r\n    let locationName = \"\";\r\n    if(pageNames.includes(lowerCaseLocationName)) {\r\n        locationName = capitalizeFirstLetter(lowerCaseLocationName);\r\n    }\r\n    \r\n    return <>\r\n        <FixedAppBar>\r\n            <SideMenuButton />\r\n            <Typography variant=\"h5\">\r\n                {locationName}\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <MenuItems />\r\n        </FixedAppBar>\r\n    </>\r\n}\r\n\r\nconst pageNames = [\"overview\", \"routines\", \"exercises\", \"stats\", \"settings\"];\r\n\r\nconst lastPartOfPath = (path: string) => {\r\n    const pathParts = path.split(\"/\");\r\n    return pathParts[pathParts.length - 1]\r\n}\r\n\r\nconst capitalizeFirstLetter = (text: string) => {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n\r\ninterface FixedAppBarProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst FixedAppBar = ({children}: FixedAppBarProps) => {\r\n    // The last toolbar takes up the space under the appbar\r\n    return <>\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Toolbar />\r\n    </>\r\n}\r\n\r\nconst SideMenuButton = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const toggleIsOpen = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const signOut = () => {\r\n        toggleIsOpen();\r\n\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    return <>\r\n        <Hidden lgUp>\r\n            <IconButton \r\n                color=\"inherit\" \r\n                aria-label=\"menu\"\r\n                onClick={toggleIsOpen}\r\n            >\r\n                <Menu />\r\n            </IconButton>\r\n        </Hidden>\r\n        <SwipeableDrawer\r\n            anchor=\"left\"\r\n            open={isOpen}\r\n            onClose={() => setIsOpen(false)}\r\n            onOpen={() => setIsOpen(true)}\r\n            className={classes.sideNavMenu}\r\n        >   \r\n            <List>\r\n                <ListItem>\r\n                    <img \r\n                        className={classes.sideMenuImage}\r\n                        src={customFitLogo} \r\n                        alt=\"Custom Fit logo\" \r\n                    />\r\n                </ListItem>\r\n                {pageNames.map(pageName => {\r\n                    return <ListItem \r\n                                key={pageName} \r\n                                button \r\n                                component={Link} \r\n                                to={process.env.PUBLIC_URL + '/' + pageName}\r\n                                onClick={toggleIsOpen}\r\n                            >\r\n                        <ListItemText primary={capitalizeFirstLetter(pageName)} />\r\n                    </ListItem>\r\n                })}\r\n                <ListItem \r\n                    button \r\n                    component={Link} \r\n                    to={process.env.PUBLIC_URL + '/'}\r\n                    onClick={signOut}\r\n                >\r\n                    <ListItemText primary=\"Sign Out\" />\r\n                </ListItem>\r\n                \r\n            </List>\r\n        </SwipeableDrawer>\r\n    </>\r\n}\r\n\r\nconst MenuItems = () => {\r\n    const signOut = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    return <>\r\n        <Hidden mdDown>\r\n            {pageNames.map(pageName => {\r\n                return <Button \r\n                            key={pageName} \r\n                            color=\"inherit\"\r\n                            component={Link} \r\n                            to={process.env.PUBLIC_URL + '/' + pageName}\r\n                        >\r\n                    {capitalizeFirstLetter(pageName)}\r\n                </Button>\r\n            })}\r\n            <Button \r\n                color=\"inherit\"\r\n                onClick={signOut}\r\n                component={Link} \r\n                to={process.env.PUBLIC_URL + '/'}\r\n            >\r\n                Sign Out\r\n            </Button>\r\n        </Hidden>\r\n    </>\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Overview = () => {\r\n    return <>\r\n        0 This is an overview <br/>\r\n        1 This is an overview <br/>\r\n        2 This is an overview <br/>\r\n        3 This is an overview <br/>\r\n        4 This is an overview <br/>\r\n        5 This is an overview <br/>\r\n        6 This is an overview <br/>\r\n        7 This is an overview <br/>\r\n        8 This is an overview <br/>\r\n        9 This is an overview <br/>\r\n        10 This is an overview <br/>\r\n        11 This is an overview <br/>\r\n        12 This is an overview <br/>\r\n        13 This is an overview <br/>\r\n        14 This is an overview <br/>\r\n        15 This is an overview <br/>\r\n        16 This is an overview <br/>\r\n        17 This is an overview <br/>\r\n        18 This is an overview <br/>\r\n        19 This is an overview <br/>\r\n        20 This is an overview <br/>\r\n        21 This is an overview <br/>\r\n        22 This is an overview <br/>\r\n        23 This is an overview <br/>\r\n        24 This is an overview <br/>\r\n        25 This is an overview <br/>\r\n        26 This is an overview <br/>\r\n        27 This is an overview <br/>\r\n        28 This is an overview <br/>\r\n        29 This is an overview <br/>\r\n        30 This is an overview <br/>\r\n        31 This is an overview <br/>\r\n        32 This is an overview <br/>\r\n        33 This is an overview <br/>\r\n        34 This is an overview <br/>\r\n        35 This is an overview <br/>\r\n        36 This is an overview <br/>\r\n        37 This is an overview <br/>\r\n        38 This is an overview <br/>\r\n        39 This is an overview <br/>\r\n    </>\r\n}\r\n\r\nconst isToday = (someDate: Date) => {\r\n    const today = new Date(); \r\n    return someDate.getDate() === today.getDate() &&\r\n        someDate.getMonth() === today.getMonth() &&\r\n        someDate.getFullYear() === today.getFullYear()\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface AddButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst AddButton = ({onClick}: AddButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <AddCircle \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default AddButton;\r\n","import React, { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    centerContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\ninterface CenterProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Center = ({children}: CenterProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <div className={classes.centerContent}>\r\n            {children}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Center;\r\n","import React from 'react';\r\nimport { Save } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface SaveButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst SaveButton = ({onClick}: SaveButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <Save \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default SaveButton;","import React from 'react';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface BackButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst BackButton = ({onClick}: BackButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <ArrowBack \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default BackButton;","import React from 'react';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface DeleteButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst DeleteButton = ({onClick}: DeleteButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <Delete \r\n                color=\"secondary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport { FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\r\nimport { State, useValidationStyleFromState } from './state';\r\n\r\ninterface InputFieldProps {\r\n    label?: string\r\n    errorText?: string\r\n    state: State\r\n    inputType?: string\r\n    value?: string | number\r\n    onValueChange?: (value: string) => void\r\n    min?: number\r\n    max?: number\r\n    step?: number\r\n}\r\n\r\nconst InputField = ({label, errorText, state, inputType, value, onValueChange, min, max, step}: InputFieldProps) => {\r\n    const classes = useValidationStyleFromState(state);\r\n\r\n    const onChange = onValueChange === undefined ? undefined : (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n\r\n        onValueChange(value);\r\n    }\r\n\r\n    return <>\r\n        <FormControl \r\n            required\r\n            className={classes.validation}\r\n            fullWidth={true}\r\n        >\r\n            {label !== undefined && \r\n                <InputLabel>{label}</InputLabel>\r\n            }\r\n            <Input \r\n                type={inputType} \r\n                value={value === undefined ? '' : value}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                    min: min,\r\n                    max: max,\r\n                    step: step\r\n                }}\r\n            />\r\n            <FormHelperText>\r\n                {state !== undefined && state === State.ERROR && \r\n                    errorText\r\n                }\r\n            </FormHelperText>\r\n        </FormControl>\r\n    </>\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { State } from './state';\r\nimport InputField from './InputField';\r\n\r\ninterface InputTextFieldProps {\r\n    label?: string\r\n    errorText?: string\r\n    state: State\r\n    value?: string\r\n    onValueChange?: (value: string) => void\r\n}\r\n\r\nconst InputTextField = ({label, errorText, state, value, onValueChange}: InputTextFieldProps) => {\r\n    return <>\r\n        <InputField \r\n            label={label}\r\n            errorText={errorText}\r\n            state={state}\r\n            inputType=\"text\"\r\n            value={value}\r\n            onValueChange={onValueChange}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default InputTextField;","import React from 'react';\r\nimport { State } from './state';\r\nimport InputTextField from './InputTextField';\r\n\r\ninterface InputTextFieldWithValidationProps {\r\n    label: string\r\n    errorText: string\r\n    state: State\r\n    value: string | undefined\r\n    onValueChange: (value: string) => void\r\n    onValidationChange: (toState: State) => void\r\n    minLength: number\r\n    maxLength: number\r\n}\r\n\r\nconst InputTextFieldWithValidation = ({label, errorText, state, value, onValueChange, onValidationChange, minLength, maxLength}: InputTextFieldWithValidationProps) => {\r\n    const validityOfValue = (value: string | undefined) => {\r\n        if(value === undefined){\r\n            return State.ERROR;\r\n        }\r\n        else if(value.length < minLength || value.length > maxLength){\r\n            return State.ERROR;\r\n        }\r\n        else{\r\n            return State.SUCCESS;\r\n        }\r\n    }\r\n\r\n    const validity = validityOfValue(value);\r\n\r\n    const onChange = (value: string) => {\r\n        const newValidity = validityOfValue(value);\r\n\r\n        if(newValidity !== validity){\r\n            onValidationChange(newValidity);\r\n        }\r\n\r\n        onValueChange(value);\r\n    }\r\n    \r\n    return <>\r\n        <InputTextField \r\n            label={label}\r\n            errorText={errorText}\r\n            state={state}\r\n            value={value}\r\n            onValueChange={onChange}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default InputTextFieldWithValidation;","import React from 'react';\r\nimport { State } from './state';\r\nimport InputField from './InputField';\r\n\r\ninterface InputNumberFieldProps {\r\n    label?: string\r\n    errorText?: string\r\n    state: State\r\n    value?: number\r\n    onValueChange?: (value: string) => void\r\n    min?: number\r\n    max?: number\r\n    step?: number\r\n}\r\n\r\nconst InputNumberField = ({label, errorText, state, value, onValueChange, min, max, step}: InputNumberFieldProps) => {\r\n    return <>\r\n        <InputField \r\n            label={label}\r\n            errorText={errorText}\r\n            state={state}\r\n            inputType=\"number\"\r\n            value={value}\r\n            onValueChange={onValueChange}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default InputNumberField;\r\n","import React from 'react';\r\nimport { State } from './state';\r\nimport InputNumberField from './InputNumberField';\r\n\r\ninterface InputNumberFieldWithValidationProps {\r\n    label: string\r\n    errorText: string\r\n    state: State\r\n    value: number | undefined\r\n    onValueChange: (value: string) => void\r\n    onValidityChange: (toState: State) => void\r\n    min: number\r\n    max: number\r\n    step: number\r\n}\r\n\r\nconst InputNumberFieldWithValidation = ({label, errorText, state, value, onValueChange, onValidityChange, min, max, step}: InputNumberFieldWithValidationProps) => {\r\n    const validityOfValue = (value: number | undefined) => {\r\n        if(value === undefined) {\r\n            return State.ERROR;\r\n        }\r\n        else if(value < min || value > max){\r\n            return State.ERROR;\r\n        }\r\n        else{\r\n            return State.SUCCESS;\r\n        }\r\n    }\r\n    const validityOfValueAsString = (value: string) => {\r\n        if(value === ''){\r\n            return State.ERROR\r\n        }\r\n        else{\r\n            const number: number = +value;\r\n            return validityOfValue(number);\r\n        }\r\n    }\r\n\r\n    const validity = state;\r\n\r\n    const onChange = (value: string) => {\r\n        const newValidity = validityOfValueAsString(value);\r\n\r\n        if(newValidity !== validity){\r\n            onValidityChange(newValidity);\r\n        }\r\n\r\n        onValueChange(value);\r\n    }\r\n    \r\n    return <>\r\n        <InputNumberField \r\n            label={label}\r\n            errorText={errorText}\r\n            state={state}\r\n            value={value}\r\n            onValueChange={onChange}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default InputNumberFieldWithValidation;","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\ninterface SelectFieldProps {\r\n    label?: string,\r\n    possibleValues: (string | number)[], \r\n    value?: string | number, \r\n    onValueChange?: (value: string) => void\r\n}\r\n\r\nconst SelectField = ({label, possibleValues, value, onValueChange}: SelectFieldProps) => {\r\n    const onChange = onValueChange === undefined ? undefined : (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const value = (event.target.value as string);\r\n        onValueChange(value);\r\n    }\r\n\r\n    return <>\r\n        <FormControl \r\n            required\r\n            fullWidth={true}\r\n        >\r\n            {label !== undefined && \r\n                <InputLabel>{label}</InputLabel>\r\n            }\r\n            <Select\r\n                value={value === undefined ? possibleValues[0] : value}\r\n                onChange={onChange}\r\n            >\r\n                {\r\n                    possibleValues.map( (value) => {\r\n                        return <MenuItem value={value} key={value}>\r\n                            {value}\r\n                        </MenuItem>\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    </>\r\n}\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport SelectField from './SelectField';\r\n\r\ninterface SelectNumberFieldProps {\r\n    label?: string,\r\n    possibleValues: number[], \r\n    value?: number, \r\n    onValueChange?: (value: string) => void\r\n}\r\n\r\nconst SelectNumberField = ({label, possibleValues, value, onValueChange}: SelectNumberFieldProps) => {\r\n    return <>\r\n        <SelectField \r\n            label={label}\r\n            possibleValues={possibleValues}\r\n            value={value}\r\n            onValueChange={onValueChange}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default SelectNumberField;\r\n","export const limitsToArray = (min: number, maxInclusive: number, step: number) => {\r\n    let array: number[] = []\r\n    const additional = (maxInclusive - min) % step === 0 ? 1 : 0;\r\n    const nElements = (maxInclusive - min ) / step + additional;\r\n    for(let i = 0; i < nElements; i++){\r\n        array.push(min + i * step)\r\n    }\r\n    return array;\r\n}\r\n","import React from 'react';\r\n\r\nimport { Typography, Grid, Card, CardContent } from '@material-ui/core';\r\n\r\nimport { State } from \"./fields/state\";\r\nimport SaveButton from '../buttons/SaveButton';\r\nimport BackButton from '../buttons/BackButton';\r\nimport DeleteButton from '../buttons/DeleteButton';\r\nimport Center from '../Center';\r\nimport { Exercise } from '../../resources/firebase/exercises';\r\n\r\nimport InputTextFieldWithValidation from './fields/InputTextFieldWithValidation';\r\nimport InputNumberFieldWithValidation from './fields/InputNumberFieldWithValidation';\r\nimport SelectNumberField from './fields/SelectNumberField'\r\n\r\nimport { limitsToArray } from '../../utils/array'\r\n\r\nexport interface CombinedStatus {\r\n    name: State\r\n    reps: State\r\n    sets: State\r\n    pause: State\r\n    increment: State\r\n    weight: State\r\n}\r\n\r\ninterface ValidityParams {\r\n    min: number,\r\n    max: number,\r\n    step: number\r\n}\r\n\r\nexport interface CombinedValidityParams {\r\n    name: ValidityParams\r\n    reps: ValidityParams\r\n    sets: ValidityParams\r\n    pauseMinutes: ValidityParams\r\n    pauseSeconds: ValidityParams\r\n    increment: ValidityParams\r\n    weight: ValidityParams\r\n}\r\n\r\nexport type TemporaryExercise = {\r\n    [prop in keyof Exercise]?: Exercise[prop];\r\n} & {\r\n    pause: Exercise['pause'];\r\n}\r\n\r\ninterface ExerciseFormProps {\r\n    exercise: TemporaryExercise\r\n    combinedStatus: CombinedStatus\r\n    combinedValidityParams: CombinedValidityParams\r\n    onValueChange: (prop: keyof Exercise) => (value: string) => void\r\n    onValidityChange: (prop: keyof Exercise) => (toStatus: State) => void\r\n    onClickBack: () => void\r\n    onClickSave: () => void\r\n    onClickDelete?: () => void\r\n}\r\n\r\nconst ExerciseForm = ({\r\n        exercise, \r\n        combinedStatus,\r\n        combinedValidityParams,\r\n        onValueChange,\r\n        onValidityChange, \r\n        onClickBack, \r\n        onClickSave, \r\n        onClickDelete\r\n    }: ExerciseFormProps) => {\r\n    \r\n    const pauseMinutes = Math.floor(exercise.pause / 60);\r\n    const pauseSeconds = exercise.pause % 60;\r\n\r\n    const onMinutesChange = (value: string) => {\r\n        const minutes = +value;\r\n        const pause = 60 * minutes + pauseSeconds;\r\n        onValueChange('pause')(pause.toString());\r\n    }\r\n\r\n    const onSecondsChange = (value: string) => {\r\n        const seconds = +value;\r\n        const pause = 60 * pauseMinutes + seconds;\r\n        onValueChange('pause')(pause.toString());\r\n    }\r\n    \r\n    return <>\r\n        <Card>\r\n            <CardContent>\r\n            <   Typography variant=\"h5\">Plan an exercise</Typography>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <InputTextFieldWithValidation \r\n                            label=\"Name\" \r\n                            errorText=\"Name must have length between 1 and 99\"\r\n                            state={combinedStatus.name}\r\n                            value={exercise.name}\r\n                            onValueChange={onValueChange('name')}\r\n                            onValidationChange={onValidityChange('name')}\r\n                            minLength={combinedValidityParams.name.min}\r\n                            maxLength={combinedValidityParams.name.max}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InputNumberFieldWithValidation \r\n                            label=\"Reps\" \r\n                            errorText=\"Should be an integer between 1 and 99\"\r\n                            state={combinedStatus.reps}\r\n                            value={exercise.reps}\r\n                            onValueChange={onValueChange('reps')}\r\n                            onValidityChange={onValidityChange('reps')}\r\n                            min={combinedValidityParams.reps.min}\r\n                            max={combinedValidityParams.reps.max}\r\n                            step={combinedValidityParams.reps.step}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InputNumberFieldWithValidation \r\n                            label=\"Sets\" \r\n                            errorText=\"Should be an integer between 1 and 12\"\r\n                            state={combinedStatus.sets}\r\n                            value={exercise.sets}\r\n                            onValueChange={onValueChange('sets')}\r\n                            onValidityChange={onValidityChange('sets')}\r\n                            min={combinedValidityParams.sets.min}\r\n                            max={combinedValidityParams.sets.max}\r\n                            step={combinedValidityParams.sets.step}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <SelectNumberField \r\n                            label=\"Pause minutes\"\r\n                            possibleValues={limitsToArray(\r\n                                combinedValidityParams.pauseMinutes.min,\r\n                                combinedValidityParams.pauseMinutes.max,\r\n                                combinedValidityParams.pauseMinutes.step\r\n                            )}\r\n                            onValueChange={onMinutesChange}\r\n                            value={pauseMinutes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <SelectNumberField \r\n                            label=\"Pause seconds\"\r\n                            possibleValues={limitsToArray(\r\n                                combinedValidityParams.pauseSeconds.min,\r\n                                combinedValidityParams.pauseSeconds.max,\r\n                                combinedValidityParams.pauseSeconds.step\r\n                            )}\r\n                            onValueChange={onSecondsChange}\r\n                            value={pauseSeconds}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InputNumberFieldWithValidation \r\n                            label=\"Increment\" \r\n                            errorText=\"Should be between 0 and 10 with steps of 0.25\"\r\n                            state={combinedStatus.increment}\r\n                            value={exercise.increment}\r\n                            onValueChange={onValueChange('increment')}\r\n                            onValidityChange={onValidityChange('increment')}\r\n                            min={combinedValidityParams.increment.min}\r\n                            max={combinedValidityParams.increment.max}\r\n                            step={combinedValidityParams.increment.step}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InputNumberFieldWithValidation \r\n                            label=\"Weight\" \r\n                            errorText=\"Should be between 1 and 999 with steps of 0.25\"\r\n                            state={combinedStatus.weight}\r\n                            value={exercise.weight}\r\n                            onValueChange={onValueChange('weight')}\r\n                            onValidityChange={onValidityChange('weight')}\r\n                            min={combinedValidityParams.weight.min}\r\n                            max={combinedValidityParams.weight.max}\r\n                            step={combinedValidityParams.weight.step}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Center>\r\n                            <BackButton onClick={onClickBack} />\r\n                            <SaveButton onClick={onClickSave} />\r\n                            {onClickDelete !== undefined && \r\n                                <DeleteButton onClick={onClickDelete} />\r\n                            }\r\n                        </Center>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default ExerciseForm;","import React, { useState } from 'react';\r\n\r\nimport { State } from \"./fields/state\";\r\nimport { Exercise } from '../../resources/firebase/exercises';\r\n\r\nimport ExerciseForm, { CombinedValidityParams, TemporaryExercise, CombinedStatus } from './ExerciseForm'\r\n\r\nconst combinedValidityParams: CombinedValidityParams = {\r\n    name: {min: 1, max: 99, step: 1},\r\n    reps: {min: 1, max: 99, step: 1},\r\n    sets: {min: 1, max: 12, step: 1}, \r\n    pauseMinutes: {min: 0, max: 6, step: 1},\r\n    pauseSeconds: {min: 0, max: 45, step: 15}, \r\n    increment: {min: 0, max: 10, step: 0.25},\r\n    weight: {min: 1, max: 999, step: 0.25}\r\n}\r\n\r\ninterface ExerciseFormWithValidationProps {\r\n    exercise?: Exercise\r\n    onClickBack: () => void\r\n    onClickSaveValidated: (exercise: Exercise) => void\r\n    onClickDeleteValidated?: () => void\r\n}\r\n\r\nconst ExerciseFormWithValidation = ({\r\n        exercise, \r\n        onClickBack, \r\n        onClickSaveValidated,\r\n        onClickDeleteValidated\r\n    }: ExerciseFormWithValidationProps) => {\r\n\r\n    let initialExercise: TemporaryExercise;\r\n    let initialCombinedStatus: CombinedStatus;\r\n    if(exercise === undefined){\r\n        initialExercise = {\r\n            name: '',\r\n            reps: undefined, \r\n            sets: undefined, \r\n            pause: 0, \r\n            increment: undefined,\r\n            weight: undefined\r\n        };\r\n        initialCombinedStatus = {\r\n            name: State.PRIMARY,\r\n            reps: State.PRIMARY, \r\n            sets: State.PRIMARY, \r\n            pause: State.SUCCESS, \r\n            increment: State.PRIMARY, \r\n            weight: State.PRIMARY\r\n        };\r\n    }\r\n    else {\r\n        initialExercise = exercise;\r\n        initialCombinedStatus = {\r\n            name: State.SUCCESS,\r\n            reps: State.SUCCESS, \r\n            sets: State.SUCCESS, \r\n            pause: State.SUCCESS, \r\n            increment: State.SUCCESS, \r\n            weight: State.SUCCESS\r\n        }\r\n    }\r\n    const [temporaryExercise, setTemporaryExercise] = useState(initialExercise); \r\n    const [combinedStatus, setCombinedStatus] = useState(initialCombinedStatus)\r\n\r\n    const onValueChange = (prop: keyof Exercise) => (value: string) => {\r\n        setTemporaryExercise({ ...temporaryExercise, [prop]: value });\r\n    }\r\n\r\n    const onValidityChange = (prop: keyof Exercise) => (toStatus: State) => {\r\n        setCombinedStatus({...combinedStatus, [prop]: toStatus})\r\n    }\r\n\r\n    const isFieldValid = (prop: keyof Exercise) => {\r\n        const currentStatus: State = combinedStatus[prop];\r\n        if(currentStatus === State.SUCCESS){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const areAllValid: () => boolean = () => {\r\n        return isFieldValid('name')\r\n            && isFieldValid('reps')\r\n            && isFieldValid('sets')\r\n            && isFieldValid('increment')\r\n            && isFieldValid('weight')\r\n    }\r\n\r\n    const onClickSave = () => {\r\n        if(areAllValid()){\r\n            onClickSaveValidated(temporaryExercise as Exercise);\r\n        }\r\n    }\r\n    const onClickDelete = onClickDeleteValidated === undefined ? undefined : () => {\r\n        if(areAllValid()){\r\n            onClickDeleteValidated();\r\n        }\r\n    }\r\n    \r\n    return <>\r\n        <ExerciseForm    \r\n            exercise={temporaryExercise}\r\n            combinedStatus={combinedStatus}\r\n            combinedValidityParams={combinedValidityParams}\r\n            onValueChange={onValueChange}\r\n            onValidityChange={onValidityChange}\r\n            onClickBack={onClickBack}\r\n            onClickSave={onClickSave}\r\n            onClickDelete={onClickDelete}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default ExerciseFormWithValidation;","import React from 'react';\r\nimport { Edit } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface EditButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst EditButton = ({onClick}: EditButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <Edit \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default EditButton;","import React, { useState } from 'react';\r\n\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport { Exercise } from '../../resources/firebase/exercises';\r\nimport ExerciseFormWithValidation from './ExerciseFormWithValidation';\r\nimport EditButton from '../buttons/EditButton';\r\nimport AddButton from '../buttons/AddButton';\r\n\r\ninterface ExerciseFormWithDialogsAndValidationProps {\r\n    exercise?: Exercise\r\n    onClickBack: () => void\r\n    onClickAdd: (exercise: Exercise) => void\r\n    onClickEdit?: (exercise: Exercise) => void\r\n    onClickDelete?: () => void\r\n}\r\n\r\nconst ExerciseFormWithDialogsAndValidation = ({\r\n        exercise, \r\n        onClickBack, \r\n        onClickAdd, \r\n        onClickEdit, \r\n        onClickDelete\r\n    }: ExerciseFormWithDialogsAndValidationProps) => {\r\n    \r\n    const shouldConfirmSaving = onClickEdit !== undefined;\r\n    \r\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n    const onCloseDeleteDialog = () => {\r\n        setIsDeleteDialogOpen(false);\r\n    }\r\n    const onClickDeleteValidated = () => {\r\n        setIsDeleteDialogOpen(true);\r\n    }\r\n    const onClickConfirmedDelete = () => {\r\n        if(onClickDelete !== undefined){\r\n            onClickDelete();\r\n            onClickBack();\r\n        }\r\n    }\r\n    \r\n    const [exerciseToPossiblySave, setExerciseToPossibleSave] = useState(undefined as Exercise | undefined);\r\n    const isSaveDialogOpen = exerciseToPossiblySave !== undefined;\r\n\r\n    const onCloseSaveDialog = () => {\r\n        setExerciseToPossibleSave(undefined);\r\n    }\r\n    const onClickSaveValidated = (exercise: Exercise) => {\r\n        if(shouldConfirmSaving){\r\n            setExerciseToPossibleSave(exercise);\r\n        }\r\n        else {\r\n            onClickAdd(exercise);\r\n            onClickBack();\r\n        }\r\n    }\r\n\r\n    const onClickConfirmedEdit = () => {\r\n        if(exerciseToPossiblySave !== undefined && onClickEdit!== undefined){\r\n            onClickEdit(exerciseToPossiblySave);\r\n            onClickBack();\r\n        }\r\n    }\r\n\r\n    const onClickConfirmedAdd = () => {\r\n        if(exerciseToPossiblySave !== undefined){\r\n            onClickAdd(exerciseToPossiblySave);\r\n            onClickBack();\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <ExerciseFormWithValidation    \r\n            exercise={exercise}\r\n            onClickBack={onClickBack}\r\n            onClickSaveValidated={onClickSaveValidated}\r\n            onClickDeleteValidated={onClickDeleteValidated}\r\n        />\r\n\r\n        <Dialog\r\n            open={isDeleteDialogOpen}\r\n            onClose={onCloseDeleteDialog}\r\n        >\r\n            <DialogTitle>{\"Are you sure you want to delete this exercise?\"}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={onClickConfirmedDelete} variant=\"contained\" color=\"primary\">\r\n                    Yes\r\n                </Button>\r\n                <Button onClick={onCloseDeleteDialog} variant=\"contained\">\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        {shouldConfirmSaving &&\r\n            <Dialog\r\n                open={isSaveDialogOpen}\r\n                onClose={onCloseSaveDialog}\r\n            >\r\n                <DialogTitle>{\"Create new or edit?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        You can choose between creating a new exercise \r\n                        or editing the exercise you clicked. \r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <AddButton onClick={onClickConfirmedAdd} />\r\n                    <EditButton onClick={onClickConfirmedEdit} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ExerciseFormWithDialogsAndValidation;","import React, { useState } from 'react';\r\nimport { Card, CardContent, Typography, Grid, Box, CircularProgress, CardActionArea } from '@material-ui/core';\r\n\r\nimport AddButton from '../components/buttons/AddButton'\r\nimport Center from '../components/Center'\r\nimport ExerciseFormWithDialogsAndValidation from '../components/forms/ExerciseFormWithDialogsAndValidation'\r\nimport { useStoredExercises, Exercise, StoredExercise, addExerciseToStore, editExerciseInStore, deleteExerciseFromStore } from '../resources/firebase/exercises'\r\n\r\ninterface ExerciseParameterProps {\r\n    name: string, \r\n    value: string\r\n}\r\n\r\nconst ExerciseParameter = ({name, value}: ExerciseParameterProps) => {\r\n    return <>\r\n        <Typography component={'span'}>\r\n            <Box fontWeight=\"fontWeightBold\" display=\"inline\">\r\n                {name + \": \"}\r\n            </Box>\r\n        </Typography>\r\n        <Typography component={'span'}>\r\n            {value}\r\n        </Typography>\r\n    </>\r\n}\r\n\r\ninterface ExerciseCardProps {\r\n    storedExercise: StoredExercise\r\n    onClick: (storedExercise: StoredExercise) => void\r\n\r\n}\r\n\r\nconst ExerciseCard = ({storedExercise, onClick}: ExerciseCardProps) => {\r\n    const exercise = storedExercise.exercise;\r\n\r\n    return <>\r\n        <Card>\r\n            <CardActionArea onClick={() => {onClick(storedExercise)}}>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Typography gutterBottom variant=\"h5\">\r\n                                {exercise.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Reps\" value={exercise.reps.toString()} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Sets\" value={exercise.sets.toString()} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Pause\" value={exercise.pause.toString() + \"s\"} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Increment\" value={exercise.increment.toString() + \"kg\"} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Weight\" value={exercise.weight.toString() + \"kg\"} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nconst Exercises = () => {\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    const [selectedExercise, setSelectedExercise] = useState(undefined as unknown as StoredExercise)\r\n\r\n    const storedExercises = useStoredExercises();\r\n\r\n    const onClickOpen = () => {\r\n        setSelectedExercise(undefined as unknown as StoredExercise);\r\n        setIsFormOpen(true);\r\n    }\r\n    const onClickExercise = (storedExxercise: StoredExercise) => {\r\n        setSelectedExercise(storedExxercise);\r\n        setIsFormOpen(true);\r\n    }\r\n\r\n    const onClickFormBack = () => {\r\n        setIsFormOpen(false);\r\n    }\r\n    const onClickFormAdd = (exercise: Exercise) => {\r\n        console.log(\"Adding exercise: \")\r\n        console.log(exercise)\r\n\r\n        addExerciseToStore(exercise)\r\n    }\r\n    const onClickFormEdit = (exercise: Exercise) => {\r\n        console.log(\"Editing exercise: \")\r\n        console.log(exercise)\r\n\r\n        const newStoredExercise: StoredExercise = {\r\n            id: selectedExercise.id,\r\n            exercise: exercise\r\n        }\r\n\r\n        editExerciseInStore(newStoredExercise)\r\n    }\r\n    const onClickFormDelete = () => {\r\n        console.log(\"Deleting exercise: \")\r\n        console.log(selectedExercise)\r\n\r\n        deleteExerciseFromStore(selectedExercise)\r\n    }\r\n\r\n    if(isFormOpen){\r\n        if(selectedExercise === undefined){\r\n            return <ExerciseFormWithDialogsAndValidation \r\n                onClickBack={onClickFormBack} \r\n                onClickAdd={onClickFormAdd}\r\n            />\r\n        }\r\n        else {\r\n            return <ExerciseFormWithDialogsAndValidation \r\n                exercise={selectedExercise.exercise}\r\n                onClickBack={onClickFormBack} \r\n                onClickAdd={onClickFormAdd}\r\n                onClickEdit={onClickFormEdit}\r\n                onClickDelete={onClickFormDelete}\r\n            />\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Box mt={1}>\r\n            <Grid container spacing={3}>\r\n                {storedExercises &&\r\n                    storedExercises.map((storedExercise) => {\r\n                        return <Grid item \r\n                            key={storedExercise.id}\r\n                            xs={12} sm={6} md={4} lg={4} xl={3}\r\n                        >\r\n                            <ExerciseCard \r\n                                storedExercise={storedExercise} \r\n                                onClick={onClickExercise}\r\n                            />\r\n                        </Grid>\r\n                    })\r\n                }\r\n                <Grid item xs={12}>\r\n                    <Center>\r\n                        {!storedExercises &&\r\n                            <CircularProgress />\r\n                        }\r\n                        {storedExercises &&\r\n                            <AddButton onClick={onClickOpen} />\r\n                        }\r\n                    </Center>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Exercises;\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from './firebase';\r\n\r\nexport interface Exercise { \r\n    name: string, \r\n    reps: number, \r\n    sets: number, \r\n    pause: number, \r\n    increment: number, \r\n    weight: number\r\n}\r\n\r\ninterface ExerciseDoc extends Exercise {\r\n    uid: string\r\n}\r\n\r\nexport interface StoredExercise {\r\n    id: string,\r\n    exercise: Exercise\r\n}\r\n\r\nexport const useStoredExercises = () => {\r\n    const [exercises, setExercises] = useState(undefined as unknown as StoredExercise[]);\r\n    \r\n    useEffect(() => {\r\n        const user = firebase.auth().currentUser;\r\n        if(user !== null){\r\n            const unsubscribe = firebase\r\n                .firestore()\r\n                .collection('exercises')\r\n                .where('uid', '==', user.uid)\r\n                .onSnapshot((snapshot) => {\r\n                    const exercises: StoredExercise[] = snapshot.docs.map((doc) => {\r\n                        return {\r\n                            id: doc.id, \r\n                            exercise: doc.data()\r\n                        } as StoredExercise\r\n                    })\r\n\r\n                    setExercises(exercises);\r\n                })\r\n            return () => unsubscribe();\r\n        }\r\n    }, [])\r\n\r\n    return exercises; \r\n}\r\n\r\nexport const addExerciseToStore = (exercise: Exercise) => {\r\n    const user = firebase.auth().currentUser;\r\n    if(user !== null){\r\n        const exerciseDoc: ExerciseDoc = {\r\n            ...exercise,\r\n            uid: user.uid\r\n        }\r\n        return firebase\r\n            .firestore()\r\n            .collection('exercises')\r\n            .add(exerciseDoc)\r\n    }\r\n}\r\n\r\nexport const editExerciseInStore = (storedExercise: StoredExercise) => {\r\n    const user = firebase.auth().currentUser;\r\n    if(user !== null){\r\n        const exerciseDoc: ExerciseDoc = {\r\n            ...storedExercise.exercise,\r\n            uid: user.uid\r\n        }\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"exercises\")\r\n            .doc(storedExercise.id)\r\n            .update(exerciseDoc)\r\n    }\r\n}\r\n\r\nexport const deleteExerciseFromStore = (storedExercise: StoredExercise) => {\r\n    const user = firebase.auth().currentUser;\r\n    if(user !== null){\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"exercises\")\r\n            .doc(storedExercise.id)\r\n            .delete()\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Button, makeStyles, Typography, Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst usePageNotFoundStyle = makeStyles({\r\n    container: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst PageNotFound = () => {\r\n    const classes = usePageNotFoundStyle();\r\n\r\n    return <>\r\n        <Container className={classes.container}>\r\n            <PageNotFoundContent />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nconst PageNotFoundContent = () => {\r\n    return <>\r\n        <Typography variant=\"h5\">\r\n            No content found\r\n        </Typography>\r\n        <Typography paragraph>\r\n            This page does not seem to have any content. Consider returning to an other page. \r\n        </Typography>\r\n        <Button \r\n            color=\"primary\" \r\n            variant=\"contained\"\r\n            component={Link} \r\n            to={process.env.PUBLIC_URL + '/overview'}\r\n        >\r\n            Overview\r\n        </Button>\r\n    </>\r\n}\r\n\r\nexport default PageNotFound;","import React, { ReactNode } from 'react';\r\nimport {Container as MUIContainer, Box} from '@material-ui/core'\r\n\r\ninterface ContainerProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Container = ({children}: ContainerProps) => {\r\n    return <>\r\n        <Box mt={2}>\r\n            <MUIContainer>\r\n                <>{children}</>\r\n            </MUIContainer>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {StyledFirebaseAuth} from 'react-firebaseui'\r\nimport firebase from '../resources/firebase/firebase';\r\nimport { Typography, CircularProgress, makeStyles, Container } from '@material-ui/core';\r\nimport 'firebase/auth';\r\nimport * as firebaseui from 'firebaseui';\r\n\r\ninterface LoginProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Login = ({children}: LoginProps) => {\r\n    const [user, setUser] = useState<firebase.User | null | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            setUser(user);\r\n            console.log('User: ', user)\r\n        });\r\n    }, []);\r\n\r\n    if(user === undefined){\r\n        return <>\r\n            <LoginWaiting />\r\n        </>\r\n    }\r\n    else if(user === null){\r\n        return <>\r\n            <LoginPrompt />\r\n        </>\r\n    }\r\n    else {\r\n        return <>\r\n            {children}\r\n        </>\r\n    }\r\n};\r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst LoginWaiting = () => {\r\n    const classes = useStyle();\r\n\r\n    return <>\r\n        <Container className={classes.container}>\r\n            <Typography paragraph>\r\n                Please wait while you are being logged in...\r\n            </Typography>\r\n            <CircularProgress />\r\n        </Container>\r\n    </>\r\n};\r\n\r\nconst LoginPrompt = () => {\r\n    const classes = useStyle();\r\n\r\n    const uiConfig: firebaseui.auth.Config = {\r\n        autoUpgradeAnonymousUsers: true, \r\n        signInFlow: 'popup', \r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID, \r\n            firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\r\n        ], \r\n        callbacks: {\r\n            signInFailure: function(error: firebaseui.auth.AuthUIError) {\r\n                if (error.code === 'firebaseui/anonymous-upgrade-merge-conflict') {\r\n                    console.log(`Encountered anonymous upgrade merge conflict. `)\r\n                    var cred = error.credential;\r\n                    return firebase.auth().signInWithCredential(cred).then();\r\n                }\r\n                return Promise.resolve()\r\n            }\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Container className={classes.container}>\r\n            <Typography variant=\"h5\">\r\n                Please sign-in:\r\n            </Typography>\r\n            <StyledFirebaseAuth \r\n                uiConfig={uiConfig} \r\n                firebaseAuth={firebase.auth()} \r\n            />\r\n        </Container>\r\n    </>\r\n};\r\n\r\nexport default Login;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey, blue } from '@material-ui/core/colors';\r\n\r\n// Colors: https://material-ui.com/customization/color/\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[500],  // '#2196f3', \r\n            dark: blue[800]\r\n        },\r\n        background: {\r\n            default: blue[50]\r\n        },\r\n        text: {\r\n            primary: grey[600]\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport NavBar from './components/navbar/Navbar';\r\nimport Overview from './pages/Overview';\r\nimport Exercises from './pages/Exercises';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Container from './components/Container'\r\nimport Login from './components/Login'\r\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport {theme} from './resources/theme'\r\nimport 'typeface-roboto';\r\n\r\nfunction App() {\r\n\treturn <>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Login>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<ChooseRoute />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Router>\r\n\t\t\t</Login>\r\n\t\t</ThemeProvider>\r\n\t</>;\r\n}\r\n\r\nconst ChooseRoute = () => {\r\n\treturn <>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL} >\r\n\t\t\t\t<Redirect to={process.env.PUBLIC_URL + '/overview'} />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/overview'}>\r\n\t\t\t\t<Overview />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/exercises'}>\r\n\t\t\t\t<Exercises />\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<PageNotFound />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t</>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}