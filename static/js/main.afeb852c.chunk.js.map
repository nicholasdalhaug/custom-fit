{"version":3,"sources":["resources/img/logo_gears_drawing_192.png","components/navbar/Navbar.tsx","pages/Overview.tsx","components/AddButton.tsx","components/Center.tsx","pages/Exercises.tsx","pages/PageNotFound.tsx","components/Container.tsx","resources/theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","sideNavMenu","width","sideMenuImage","margin","pageNames","lastPartOfPath","path","pathParts","split","length","capitalizeFirstLetter","text","charAt","toUpperCase","slice","FixedAppBar","children","AppBar","position","Toolbar","SideMenuButton","useState","isOpen","setIsOpen","classes","toggleIsOpen","Hidden","lgUp","IconButton","color","aria-label","onClick","Menu","SwipeableDrawer","anchor","open","onClose","onOpen","className","List","ListItem","src","customFitLogo","alt","map","pageName","key","button","component","Link","to","process","ListItemText","primary","MenuItems","mdDown","Button","NavBar","location","useLocation","lowerCaseLocationName","pathname","locationName","includes","Typography","variant","Overview","bigButton","fontSize","AddButton","AddCircle","centerContent","display","alignItems","justifyContent","Center","ExerciseParameter","name","value","Box","fontWeight","ExerciseCard","exercise","Card","CardContent","Grid","container","item","xs","gutterBottom","reps","toString","sets","pause","increment","weight","Exercises","spacing","sm","md","lg","xl","usePageNotFoundStyle","textAlign","PageNotFoundContent","paragraph","PageNotFound","Container","mt","createMuiTheme","palette","main","blue","dark","background","default","grey","ChooseRoute","exact","App","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afeb852c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_gears_drawing_192.817771b7.png\";","import React, { useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    IconButton, \n    Typography, \n    Hidden, \n    Button, \n    makeStyles, \n    SwipeableDrawer, \n    ListItem, \n    List, \n    ListItemText\n} from '@material-ui/core';\nimport {Menu} from '@material-ui/icons'\n\nimport customFitLogo from '../../resources/img/logo_gears_drawing_192.png'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    sideNavMenu: {\n        width: 250\n    },\n    sideMenuImage: {\n        width: \"40%\",\n        margin: \"auto\"\n    },\n}));\n\nconst NavBar = () => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const lowerCaseLocationName = lastPartOfPath(location.pathname);\n    let locationName = \"\";\n    if(pageNames.includes(lowerCaseLocationName)) {\n        locationName = capitalizeFirstLetter(lowerCaseLocationName);\n    }\n    \n    return <>\n        <FixedAppBar>\n            <SideMenuButton />\n            <Typography variant=\"h5\">\n                {locationName}\n            </Typography>\n            <div className={classes.grow} />\n            <MenuItems />\n        </FixedAppBar>\n    </>\n}\n\nconst pageNames = [\"overview\", \"routines\", \"exercises\", \"stats\", \"settings\"];\n\nconst lastPartOfPath = (path: string) => {\n    const pathParts = path.split(\"/\");\n    return pathParts[pathParts.length - 1]\n}\n\nconst capitalizeFirstLetter = (text: string) => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\ninterface FixedAppBarProps {\n    children: React.ReactNode\n}\n\nconst FixedAppBar = ({children}: FixedAppBarProps) => {\n    // The last toolbar takes up the space under the appbar\n    return <>\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                {children}\n            </Toolbar>\n        </AppBar>\n        <Toolbar />\n    </>\n}\n\nconst SideMenuButton = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const classes = useStyles();\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen);\n    }\n\n    return <>\n        <Hidden lgUp>\n            <IconButton \n                color=\"inherit\" \n                aria-label=\"menu\"\n                onClick={toggleIsOpen}\n            >\n                <Menu />\n            </IconButton>\n        </Hidden>\n        <SwipeableDrawer\n            anchor=\"left\"\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n            onOpen={() => setIsOpen(true)}\n            className={classes.sideNavMenu}\n        >   \n            <List>\n                <ListItem>\n                    <img \n                        className={classes.sideMenuImage}\n                        src={customFitLogo} \n                        alt=\"Custom Fit logo\" \n                    />\n                </ListItem>\n                {pageNames.map(pageName => {\n                    return <ListItem \n                                key={pageName} \n                                button \n                                component={Link} \n                                to={process.env.PUBLIC_URL + '/' + pageName}\n                                onClick={toggleIsOpen}\n                            >\n                        <ListItemText primary={capitalizeFirstLetter(pageName)} />\n                    </ListItem>\n                })}\n                \n            </List>\n        </SwipeableDrawer>\n    </>\n}\n\nconst MenuItems = () => {\n    return <>\n        <Hidden mdDown>\n            {pageNames.map(pageName => {\n                return <Button \n                            key={pageName} \n                            color=\"inherit\"\n                            component={Link} \n                            to={process.env.PUBLIC_URL + '/' + pageName}\n                        >\n                    {capitalizeFirstLetter(pageName)}\n                </Button>\n            })}\n        </Hidden>\n    </>\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Overview = () => {\n    return <>\n        0 This is an overview <br/>\n        1 This is an overview <br/>\n        2 This is an overview <br/>\n        3 This is an overview <br/>\n        4 This is an overview <br/>\n        5 This is an overview <br/>\n        6 This is an overview <br/>\n        7 This is an overview <br/>\n        8 This is an overview <br/>\n        9 This is an overview <br/>\n        10 This is an overview <br/>\n        11 This is an overview <br/>\n        12 This is an overview <br/>\n        13 This is an overview <br/>\n        14 This is an overview <br/>\n        15 This is an overview <br/>\n        16 This is an overview <br/>\n        17 This is an overview <br/>\n        18 This is an overview <br/>\n        19 This is an overview <br/>\n        20 This is an overview <br/>\n        21 This is an overview <br/>\n        22 This is an overview <br/>\n        23 This is an overview <br/>\n        24 This is an overview <br/>\n        25 This is an overview <br/>\n        26 This is an overview <br/>\n        27 This is an overview <br/>\n        28 This is an overview <br/>\n        29 This is an overview <br/>\n        30 This is an overview <br/>\n        31 This is an overview <br/>\n        32 This is an overview <br/>\n        33 This is an overview <br/>\n        34 This is an overview <br/>\n        35 This is an overview <br/>\n        36 This is an overview <br/>\n        37 This is an overview <br/>\n        38 This is an overview <br/>\n        39 This is an overview <br/>\n    </>\n}\n\nconst isToday = (someDate: Date) => {\n    const today = new Date(); \n    return someDate.getDate() === today.getDate() &&\n        someDate.getMonth() === today.getMonth() &&\n        someDate.getFullYear() === today.getFullYear()\n}\n\nexport default Overview;","import React from 'react';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\nconst AddButton = () => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton>\r\n            <AddCircle color=\"primary\" fontSize=\"large\" className={classes.bigButton} />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default AddButton;\r\n","import React, { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    centerContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\ninterface CenterProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Center = ({children}: CenterProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <div className={classes.centerContent}>\r\n            {children}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Center;\r\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid, Box } from '@material-ui/core';\n\nimport AddButton from '../components/AddButton'\nimport Center from '../components/Center'\n\ninterface ExerciseParameterProps {\n    name: string, \n    value: string\n}\n\nconst ExerciseParameter = ({name, value}: ExerciseParameterProps) => {\n    return <>\n        <Typography component={'span'}>\n            <Box fontWeight=\"fontWeightBold\" display=\"inline\">\n                {name + \": \"}\n            </Box>\n        </Typography>\n        <Typography component={'span'}>\n            {value}\n        </Typography>\n    </>\n}\n\ninterface Exercise {\n    name: string, \n    reps: number, \n    sets: number, \n    pause: number, \n    increment: number, \n    weight: number\n}\n\ninterface ExerciseCardProps {\n    exercise: Exercise\n}\n\nconst ExerciseCard = ({exercise}: ExerciseCardProps) => {\n    return <>\n        <Card>\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Typography gutterBottom variant=\"h5\">\n                            {exercise.name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ExerciseParameter name=\"Reps\" value={exercise.reps.toString()} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ExerciseParameter name=\"Sets\" value={exercise.sets.toString()} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ExerciseParameter name=\"Pause\" value={exercise.pause.toString() + \"s\"} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ExerciseParameter name=\"Increment\" value={exercise.increment.toString() + \"kg\"} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <ExerciseParameter name=\"Weight\" value={exercise.weight.toString() + \"kg\"} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    </>\n}\n\nconst Exercises = () => {\n    const legPress: Exercise = {\n        name: \"Leg press\", \n        reps: 12, \n        sets: 3, \n        pause: 90, \n        increment: 2.5, \n        weight: 172.5\n    }\n    const chestPress: Exercise = {\n        name: \"Chest press\", \n        reps: 12, \n        sets: 3,\n        pause: 90,\n        increment: 2.5,\n        weight: 80\n    }\n\n    return <>\n        <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={3}> \n                <ExerciseCard exercise={legPress} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={3}> \n                <ExerciseCard exercise={chestPress} />\n            </Grid>\n            <Grid item xs={12}>\n                <Center>\n                    <AddButton />\n                </Center>\n            </Grid>\n        </Grid>\n    </>\n}\n\nexport default Exercises;\n","import React from 'react';\nimport { Button, makeStyles, Typography, Container } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst usePageNotFoundStyle = makeStyles({\n    container: {\n        textAlign: \"center\"\n    }\n})\n\nconst PageNotFound = () => {\n    const classes = usePageNotFoundStyle();\n\n    return <>\n        <Container className={classes.container}>\n            <PageNotFoundContent />\n        </Container>\n    </>\n}\n\nconst PageNotFoundContent = () => {\n    return <>\n        <Typography variant=\"h5\">\n            No content found\n        </Typography>\n        <Typography paragraph>\n            This page does not seem to have any content. Consider returning to an other page. \n        </Typography>\n        <Button \n            color=\"primary\" \n            variant=\"contained\"\n            component={Link} \n            to={process.env.PUBLIC_URL + '/overview'}\n        >\n            Overview\n        </Button>\n    </>\n}\n\nexport default PageNotFound;","import React, { ReactNode } from 'react';\r\nimport {Container as MUIContainer, Box} from '@material-ui/core'\r\n\r\ninterface ContainerProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Container = ({children}: ContainerProps) => {\r\n    return <>\r\n        <Box mt={3}>\r\n            <MUIContainer>\r\n                {children}\r\n            </MUIContainer>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Container;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { grey, blue } from '@material-ui/core/colors';\n\n// Colors: https://material-ui.com/customization/color/\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[500],  // '#2196f3', \n            dark: blue[800]\n        },\n        background: {\n            default: blue[50]\n        },\n        text: {\n            primary: grey[600]\n        }\n    }\n});\n","import React from 'react';\nimport NavBar from './components/navbar/Navbar';\nimport Overview from './pages/Overview';\nimport Exercises from './pages/Exercises';\nimport PageNotFound from './pages/PageNotFound';\nimport Container from './components/Container'\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\n\nimport {theme} from './resources/theme'\nimport 'typeface-roboto';\n\nfunction App() {\n\treturn <>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Router>\n\t\t\t\t<NavBar />\n\t\t\t\t<Container>\n\t\t\t\t\t<ChooseRoute />\n\t\t\t\t</Container>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t</>;\n}\n\nconst ChooseRoute = () => {\n\treturn <>\n\t\t<Switch>\n\t\t\t<Route exact path={process.env.PUBLIC_URL} >\n\t\t\t\t<Redirect to={process.env.PUBLIC_URL + '/overview'} />\n\t\t\t</Route>\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/overview'}>\n\t\t\t\t<Overview />\n\t\t\t</Route>\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/exercises'}>\n\t\t\t\t<Exercises />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<PageNotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t</>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}