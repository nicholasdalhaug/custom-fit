{"version":3,"sources":["resources/img/logo_gears_drawing_192.png","resources/firebase/firebase.ts","components/forms/fields/state.tsx","components/navbar/Navbar.tsx","pages/Overview.tsx","components/buttons/AddButton.tsx","components/Center.tsx","components/buttons/SaveButton.tsx","components/buttons/BackButton.tsx","components/buttons/DeleteButton.tsx","components/forms/fields/InputField.tsx","components/forms/fields/InputTextField.tsx","components/forms/fields/InputTextFieldWithValidation.tsx","components/forms/fields/InputNumberField.tsx","components/forms/fields/InputNumberFieldWithValidation.tsx","components/forms/fields/SelectField.tsx","components/forms/fields/SelectNumberField.tsx","utils/array.tsx","components/forms/ExerciseForm.tsx","components/forms/ExerciseFormWithValidation.tsx","components/buttons/EditButton.tsx","components/forms/ExerciseFormWithDialogsAndValidation.tsx","pages/Exercises.tsx","resources/firebase/exercises.tsx","pages/PageNotFound.tsx","components/Container.tsx","components/Login.tsx","resources/theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","State","useStyles","makeStyles","theme","grow","flexGrow","sideNavMenu","width","sideMenuImage","margin","pageNames","lastPartOfPath","path","pathParts","split","length","capitalizeFirstLetter","text","charAt","toUpperCase","slice","FixedAppBar","children","AppBar","position","Toolbar","SideMenuButton","useState","isOpen","setIsOpen","classes","toggleIsOpen","Hidden","lgUp","IconButton","color","aria-label","onClick","Menu","SwipeableDrawer","anchor","open","onClose","onOpen","className","List","ListItem","src","customFitLogo","alt","map","pageName","button","component","Link","to","ListItemText","primary","auth","signOut","MenuItems","mdDown","Button","NavBar","location","useLocation","lowerCaseLocationName","pathname","locationName","includes","Typography","variant","Overview","bigButton","fontSize","AddButton","AddCircle","centerContent","display","alignItems","justifyContent","Center","validationStyleFromState","state","styledBy","property","mapping","props","useValidationStyle","validation","palette","main","error","success","borderBottomColor","borderColor","SaveButton","Save","BackButton","ArrowBack","DeleteButton","Delete","InputField","label","errorText","inputType","value","onValueChange","min","max","step","style","useValidationStyleFromState","onChange","undefined","event","target","FormControl","required","fullWidth","InputLabel","Input","type","inputProps","FormHelperText","ERROR","InputTextField","InputTextFieldWithValidation","onValidationChange","minLength","maxLength","validityOfValue","SUCCESS","validity","newValidity","InputNumberField","InputNumberFieldWithValidation","onValidityChange","validityOfValueAsString","SelectField","possibleValues","Select","MenuItem","SelectNumberField","limitsToArray","maxInclusive","array","nElements","i","push","ExerciseForm","exercise","combinedStatus","combinedValidityParams","onClickBack","onClickSave","onClickDelete","pauseMinutes","Math","floor","pause","pauseSeconds","Card","CardContent","Grid","container","spacing","item","xs","name","reps","sets","toString","increment","weight","ExerciseFormWithValidation","initialExercise","initialCombinedStatus","onClickSaveValidated","onClickDeleteValidated","PRIMARY","temporaryExercise","setTemporaryExercise","setCombinedStatus","isFieldValid","prop","areAllValid","toStatus","EditButton","Edit","ExerciseFormWithDialogsAndValidation","onClickAdd","onClickEdit","shouldConfirmSaving","isDeleteDialogOpen","setIsDeleteDialogOpen","onCloseDeleteDialog","exerciseToPossiblySave","setExerciseToPossibleSave","isSaveDialogOpen","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","ExerciseParameter","Box","fontWeight","ExerciseCard","storedExercise","CardActionArea","gutterBottom","Exercises","isFormOpen","setIsFormOpen","selectedExercise","setSelectedExercise","storedExercises","exercises","setExercises","useEffect","user","currentUser","unsubscribe","firestore","collection","where","uid","onSnapshot","snapshot","docs","doc","id","data","useStoredExercises","onClickExercise","storedExxercise","onClickFormBack","onClickFormAdd","console","log","exerciseDoc","add","addExerciseToStore","update","editExerciseInStore","delete","mt","sm","md","lg","xl","CircularProgress","usePageNotFoundStyle","textAlign","PageNotFoundContent","paragraph","PageNotFound","Container","useStyle","LoginWaiting","LoginPrompt","uiConfig","autoUpgradeAnonymousUsers","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","firebaseui","AnonymousAuthProvider","callbacks","signInFailure","code","cred","credential","signInWithCredential","then","Promise","resolve","firebaseAuth","Login","setUser","onAuthStateChanged","createMuiTheme","blue","dark","background","default","grey","ChooseRoute","exact","App","ThemeProvider","CssBaseline","basename","process","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e3c3daab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_gears_drawing_192.8df96554.png\";","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBSsGGNtbJKdWhAJ-x8PCZpN5JIZii8x7M\",\n    authDomain: \"custom-fit-885d7.firebaseapp.com\",\n    databaseURL: \"https://custom-fit-885d7.firebaseio.com\",\n    projectId: \"custom-fit-885d7\",\n    storageBucket: \"custom-fit-885d7.appspot.com\",\n    messagingSenderId: \"504159396672\",\n    appId: \"1:504159396672:web:b995f81e096087eb\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import { makeStyles, Theme } from '@material-ui/core';\n\nexport enum State {\n    PRIMARY = \"primary\",\n    ERROR = \"error\",\n    SUCCESS = \"success\"\n}\n\ninterface StateMapping {\n    primary: string;\n    error: string;\n    success: string;\n    [key: string]: any;\n}\n\nexport interface StyleProps {\n    state: State;\n    [key: string]: any;\n}\n\nexport const useValidationStyleFromState = (state: State) => {\n    const style = validationStyleFromState(state);\n    return useValidationStyle(style);\n}\n\nconst validationStyleFromState = (state: State) => {\n    const validationStyle: StyleProps = {state: state};\n    return validationStyle\n}\n\nconst styledBy = (property: string, mapping: StateMapping) => (props: StyleProps) => mapping[props[property]];\n\nconst useValidationStyle: (props: StyleProps) => Record<\"validation\", string> = makeStyles((theme: Theme) => ({\n    validation: {\n        '& label.Mui-focused': {\n            color: styledBy('state', {\n                primary: theme.palette.primary.main,\n                error: theme.palette.error.main,\n                success: theme.palette.success.main,\n            }),\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: styledBy('state', {\n                primary: theme.palette.primary.main,\n                error: theme.palette.error.main,\n                success: theme.palette.success.main,\n            })\n        },\n        // Colors when not in focus: \n        '& .MuiInput-underline:before': {\n            borderColor: styledBy('state', {\n                primary: '',\n                error: theme.palette.error.main,\n                success: theme.palette.success.main,\n            })\n        },\n        '& .MuiInput-underline:hover:before': {\n            borderColor: styledBy('state', {\n                primary: '',\n                error: theme.palette.error.main,\n                success: theme.palette.success.main,\n            })\n        },\n        '& label': {\n            color: styledBy('state', {\n                primary: '',\n                error: theme.palette.error.main,\n                success: theme.palette.success.main,\n            })\n        },\n        '& .MuiFormHelperText-root': {\n            color: theme.palette.error.main\n        },\n    }\n}));\n","import React, { useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    IconButton, \n    Typography, \n    Hidden, \n    Button, \n    makeStyles, \n    SwipeableDrawer, \n    ListItem, \n    List, \n    ListItemText\n} from '@material-ui/core';\nimport {Menu} from '@material-ui/icons'\n\nimport customFitLogo from '../../resources/img/logo_gears_drawing_192.png'\nimport { Link, useLocation } from 'react-router-dom';\nimport firebase from '../../resources/firebase/firebase';\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    sideNavMenu: {\n        width: 250\n    },\n    sideMenuImage: {\n        width: \"40%\",\n        margin: \"auto\"\n    },\n}));\n\nconst NavBar = () => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const lowerCaseLocationName = lastPartOfPath(location.pathname);\n    let locationName = \"\";\n    if(pageNames.includes(lowerCaseLocationName)) {\n        locationName = capitalizeFirstLetter(lowerCaseLocationName);\n    }\n    \n    return <>\n        <FixedAppBar>\n            <SideMenuButton />\n            <Typography variant=\"h5\">\n                {locationName}\n            </Typography>\n            <div className={classes.grow} />\n            <MenuItems />\n        </FixedAppBar>\n    </>\n}\n\nconst pageNames = [\"overview\", \"routines\", \"exercises\", \"stats\", \"settings\"];\n\nconst lastPartOfPath = (path: string) => {\n    const pathParts = path.split(\"/\");\n    return pathParts[pathParts.length - 1]\n}\n\nconst capitalizeFirstLetter = (text: string) => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\ninterface FixedAppBarProps {\n    children: React.ReactNode\n}\n\nconst FixedAppBar = ({children}: FixedAppBarProps) => {\n    // The last toolbar takes up the space under the appbar\n    return <>\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                {children}\n            </Toolbar>\n        </AppBar>\n        <Toolbar />\n    </>\n}\n\nconst SideMenuButton = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const classes = useStyles();\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen);\n    }\n\n    const signOut = () => {\n        toggleIsOpen();\n\n        firebase.auth().signOut();\n    }\n\n    return <>\n        <Hidden lgUp>\n            <IconButton \n                color=\"inherit\" \n                aria-label=\"menu\"\n                onClick={toggleIsOpen}\n            >\n                <Menu />\n            </IconButton>\n        </Hidden>\n        <SwipeableDrawer\n            anchor=\"left\"\n            open={isOpen}\n            onClose={() => setIsOpen(false)}\n            onOpen={() => setIsOpen(true)}\n            className={classes.sideNavMenu}\n        >   \n            <List>\n                <ListItem>\n                    <img \n                        className={classes.sideMenuImage}\n                        src={customFitLogo} \n                        alt=\"Custom Fit logo\" \n                    />\n                </ListItem>\n                {pageNames.map(pageName => {\n                    return <ListItem \n                                key={pageName} \n                                button \n                                component={Link} \n                                to={'/' + pageName}\n                                onClick={toggleIsOpen}\n                            >\n                        <ListItemText primary={capitalizeFirstLetter(pageName)} />\n                    </ListItem>\n                })}\n                <ListItem \n                    button \n                    component={Link} \n                    to=\"/\"\n                    onClick={signOut}\n                >\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n                \n            </List>\n        </SwipeableDrawer>\n    </>\n}\n\nconst MenuItems = () => {\n    const signOut = () => {\n        firebase.auth().signOut();\n    }\n\n    return <>\n        <Hidden mdDown>\n            {pageNames.map(pageName => {\n                return <Button \n                            key={pageName} \n                            color=\"inherit\"\n                            component={Link} \n                            to={'/' + pageName}\n                        >\n                    {capitalizeFirstLetter(pageName)}\n                </Button>\n            })}\n            <Button \n                color=\"inherit\"\n                onClick={signOut}\n                component={Link} \n                to=\"/\"\n            >\n                Sign Out\n            </Button>\n        </Hidden>\n    </>\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Overview = () => {\n    return <>\n        0 This is an overview <br/>\n    </>\n}\n\nconst isToday = (someDate: Date) => {\n    const today = new Date(); \n    return someDate.getDate() === today.getDate() &&\n        someDate.getMonth() === today.getMonth() &&\n        someDate.getFullYear() === today.getFullYear()\n}\n\nexport default Overview;","import React from 'react';\nimport { AddCircle } from '@material-ui/icons';\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    bigButton: {\n        fontSize: \"3rem\"\n    }\n});\n\ninterface AddButtonProps {\n    onClick?: () => void\n}\n\nconst AddButton = ({onClick}: AddButtonProps) => {\n    const classes = useStyles();\n\n    return <>\n        <IconButton\n            onClick={onClick}\n        >\n            <AddCircle \n                color=\"primary\" \n                fontSize=\"large\" \n                className={classes.bigButton} \n            />\n        </IconButton>\n    </>\n}\n\nexport default AddButton;\n","import React, { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    centerContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\ninterface CenterProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Center = ({children}: CenterProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <div className={classes.centerContent}>\r\n            {children}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Center;\r\n","import React from 'react';\nimport { Save } from '@material-ui/icons';\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    bigButton: {\n        fontSize: \"3rem\"\n    }\n});\n\ninterface SaveButtonProps {\n    onClick?: () => void\n}\n\nconst SaveButton = ({onClick}: SaveButtonProps) => {\n    const classes = useStyles();\n\n    return <>\n        <IconButton\n            onClick={onClick}\n        >\n            <Save \n                color=\"primary\" \n                fontSize=\"large\" \n                className={classes.bigButton} \n            />\n        </IconButton>\n    </>\n}\n\nexport default SaveButton;","import React from 'react';\nimport { ArrowBack } from '@material-ui/icons';\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    bigButton: {\n        fontSize: \"3rem\"\n    }\n});\n\ninterface BackButtonProps {\n    onClick?: () => void\n}\n\nconst BackButton = ({onClick}: BackButtonProps) => {\n    const classes = useStyles();\n\n    return <>\n        <IconButton\n            onClick={onClick}\n        >\n            <ArrowBack \n                color=\"primary\" \n                fontSize=\"large\" \n                className={classes.bigButton} \n            />\n        </IconButton>\n    </>\n}\n\nexport default BackButton;","import React from 'react';\nimport { Delete } from '@material-ui/icons';\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    bigButton: {\n        fontSize: \"3rem\"\n    }\n});\n\ninterface DeleteButtonProps {\n    onClick?: () => void\n}\n\nconst DeleteButton = ({onClick}: DeleteButtonProps) => {\n    const classes = useStyles();\n\n    return <>\n        <IconButton\n            onClick={onClick}\n        >\n            <Delete \n                color=\"secondary\" \n                fontSize=\"large\" \n                className={classes.bigButton} \n            />\n        </IconButton>\n    </>\n}\n\nexport default DeleteButton;","import React from 'react';\nimport { FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport { State, useValidationStyleFromState } from './state';\n\ninterface InputFieldProps {\n    label?: string\n    errorText?: string\n    state: State\n    inputType?: string\n    value?: string | number\n    onValueChange?: (value: string) => void\n    min?: number\n    max?: number\n    step?: number\n}\n\nconst InputField = ({label, errorText, state, inputType, value, onValueChange, min, max, step}: InputFieldProps) => {\n    const classes = useValidationStyleFromState(state);\n\n    const onChange = onValueChange === undefined ? undefined : (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n\n        onValueChange(value);\n    }\n\n    return <>\n        <FormControl \n            required\n            className={classes.validation}\n            fullWidth={true}\n        >\n            {label !== undefined && \n                <InputLabel>{label}</InputLabel>\n            }\n            <Input \n                type={inputType} \n                value={value === undefined ? '' : value}\n                onChange={onChange}\n                inputProps={{\n                    min: min,\n                    max: max,\n                    step: step\n                }}\n            />\n            <FormHelperText>\n                {state !== undefined && state === State.ERROR && \n                    errorText\n                }\n            </FormHelperText>\n        </FormControl>\n    </>\n}\n\nexport default InputField;\n","import React from 'react';\nimport { State } from './state';\nimport InputField from './InputField';\n\ninterface InputTextFieldProps {\n    label?: string\n    errorText?: string\n    state: State\n    value?: string\n    onValueChange?: (value: string) => void\n}\n\nconst InputTextField = ({label, errorText, state, value, onValueChange}: InputTextFieldProps) => {\n    return <>\n        <InputField \n            label={label}\n            errorText={errorText}\n            state={state}\n            inputType=\"text\"\n            value={value}\n            onValueChange={onValueChange}\n        />\n    </>\n}\n\nexport default InputTextField;","import React from 'react';\nimport { State } from './state';\nimport InputTextField from './InputTextField';\n\ninterface InputTextFieldWithValidationProps {\n    label: string\n    errorText: string\n    state: State\n    value: string | undefined\n    onValueChange: (value: string) => void\n    onValidationChange: (toState: State) => void\n    minLength: number\n    maxLength: number\n}\n\nconst InputTextFieldWithValidation = ({label, errorText, state, value, onValueChange, onValidationChange, minLength, maxLength}: InputTextFieldWithValidationProps) => {\n    const validityOfValue = (value: string | undefined) => {\n        if(value === undefined){\n            return State.ERROR;\n        }\n        else if(value.length < minLength || value.length > maxLength){\n            return State.ERROR;\n        }\n        else{\n            return State.SUCCESS;\n        }\n    }\n\n    const validity = validityOfValue(value);\n\n    const onChange = (value: string) => {\n        const newValidity = validityOfValue(value);\n\n        if(newValidity !== validity){\n            onValidationChange(newValidity);\n        }\n\n        onValueChange(value);\n    }\n    \n    return <>\n        <InputTextField \n            label={label}\n            errorText={errorText}\n            state={state}\n            value={value}\n            onValueChange={onChange}\n        />\n    </>\n}\n\nexport default InputTextFieldWithValidation;","import React from 'react';\nimport { State } from './state';\nimport InputField from './InputField';\n\ninterface InputNumberFieldProps {\n    label?: string\n    errorText?: string\n    state: State\n    value?: number\n    onValueChange?: (value: string) => void\n    min?: number\n    max?: number\n    step?: number\n}\n\nconst InputNumberField = ({label, errorText, state, value, onValueChange, min, max, step}: InputNumberFieldProps) => {\n    return <>\n        <InputField \n            label={label}\n            errorText={errorText}\n            state={state}\n            inputType=\"number\"\n            value={value}\n            onValueChange={onValueChange}\n            min={min}\n            max={max}\n            step={step}\n        />\n    </>\n}\n\nexport default InputNumberField;\n","import React from 'react';\nimport { State } from './state';\nimport InputNumberField from './InputNumberField';\n\ninterface InputNumberFieldWithValidationProps {\n    label: string\n    errorText: string\n    state: State\n    value: number | undefined\n    onValueChange: (value: string) => void\n    onValidityChange: (toState: State) => void\n    min: number\n    max: number\n    step: number\n}\n\nconst InputNumberFieldWithValidation = ({label, errorText, state, value, onValueChange, onValidityChange, min, max, step}: InputNumberFieldWithValidationProps) => {\n    const validityOfValue = (value: number | undefined) => {\n        if(value === undefined) {\n            return State.ERROR;\n        }\n        else if(value < min || value > max){\n            return State.ERROR;\n        }\n        else{\n            return State.SUCCESS;\n        }\n    }\n    const validityOfValueAsString = (value: string) => {\n        if(value === ''){\n            return State.ERROR\n        }\n        else{\n            const number: number = +value;\n            return validityOfValue(number);\n        }\n    }\n\n    const validity = state;\n\n    const onChange = (value: string) => {\n        const newValidity = validityOfValueAsString(value);\n\n        if(newValidity !== validity){\n            onValidityChange(newValidity);\n        }\n\n        onValueChange(value);\n    }\n    \n    return <>\n        <InputNumberField \n            label={label}\n            errorText={errorText}\n            state={state}\n            value={value}\n            onValueChange={onChange}\n        />\n    </>\n}\n\nexport default InputNumberFieldWithValidation;","import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\ninterface SelectFieldProps {\n    label?: string,\n    possibleValues: (string | number)[], \n    value?: string | number, \n    onValueChange?: (value: string) => void\n}\n\nconst SelectField = ({label, possibleValues, value, onValueChange}: SelectFieldProps) => {\n    const onChange = onValueChange === undefined ? undefined : (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = (event.target.value as string);\n        onValueChange(value);\n    }\n\n    return <>\n        <FormControl \n            required\n            fullWidth={true}\n        >\n            {label !== undefined && \n                <InputLabel>{label}</InputLabel>\n            }\n            <Select\n                value={value === undefined ? possibleValues[0] : value}\n                onChange={onChange}\n            >\n                {\n                    possibleValues.map( (value) => {\n                        return <MenuItem value={value} key={value}>\n                            {value}\n                        </MenuItem>\n                    })\n                }\n            </Select>\n        </FormControl>\n    </>\n}\n\nexport default SelectField;\n","import React from 'react';\nimport SelectField from './SelectField';\n\ninterface SelectNumberFieldProps {\n    label?: string,\n    possibleValues: number[], \n    value?: number, \n    onValueChange?: (value: string) => void\n}\n\nconst SelectNumberField = ({label, possibleValues, value, onValueChange}: SelectNumberFieldProps) => {\n    return <>\n        <SelectField \n            label={label}\n            possibleValues={possibleValues}\n            value={value}\n            onValueChange={onValueChange}\n        />\n    </>\n}\n\nexport default SelectNumberField;\n","export const limitsToArray = (min: number, maxInclusive: number, step: number) => {\n    let array: number[] = []\n    const additional = (maxInclusive - min) % step === 0 ? 1 : 0;\n    const nElements = (maxInclusive - min ) / step + additional;\n    for(let i = 0; i < nElements; i++){\n        array.push(min + i * step)\n    }\n    return array;\n}\n","import React from 'react';\n\nimport { Typography, Grid, Card, CardContent } from '@material-ui/core';\n\nimport { State } from \"./fields/state\";\nimport SaveButton from '../buttons/SaveButton';\nimport BackButton from '../buttons/BackButton';\nimport DeleteButton from '../buttons/DeleteButton';\nimport Center from '../Center';\nimport { Exercise } from '../../resources/firebase/exercises';\n\nimport InputTextFieldWithValidation from './fields/InputTextFieldWithValidation';\nimport InputNumberFieldWithValidation from './fields/InputNumberFieldWithValidation';\nimport SelectNumberField from './fields/SelectNumberField'\n\nimport { limitsToArray } from '../../utils/array'\n\nexport interface CombinedStatus {\n    name: State\n    reps: State\n    sets: State\n    pause: State\n    increment: State\n    weight: State\n}\n\ninterface ValidityParams {\n    min: number,\n    max: number,\n    step: number\n}\n\nexport interface CombinedValidityParams {\n    name: ValidityParams\n    reps: ValidityParams\n    sets: ValidityParams\n    pauseMinutes: ValidityParams\n    pauseSeconds: ValidityParams\n    increment: ValidityParams\n    weight: ValidityParams\n}\n\nexport type TemporaryExercise = {\n    [prop in keyof Exercise]?: Exercise[prop];\n} & {\n    pause: Exercise['pause'];\n}\n\ninterface ExerciseFormProps {\n    exercise: TemporaryExercise\n    combinedStatus: CombinedStatus\n    combinedValidityParams: CombinedValidityParams\n    onValueChange: (prop: keyof Exercise) => (value: string) => void\n    onValidityChange: (prop: keyof Exercise) => (toStatus: State) => void\n    onClickBack: () => void\n    onClickSave: () => void\n    onClickDelete?: () => void\n}\n\nconst ExerciseForm = ({\n        exercise, \n        combinedStatus,\n        combinedValidityParams,\n        onValueChange,\n        onValidityChange, \n        onClickBack, \n        onClickSave, \n        onClickDelete\n    }: ExerciseFormProps) => {\n    \n    const pauseMinutes = Math.floor(exercise.pause / 60);\n    const pauseSeconds = exercise.pause % 60;\n\n    const onMinutesChange = (value: string) => {\n        const minutes = +value;\n        const pause = 60 * minutes + pauseSeconds;\n        onValueChange('pause')(pause.toString());\n    }\n\n    const onSecondsChange = (value: string) => {\n        const seconds = +value;\n        const pause = 60 * pauseMinutes + seconds;\n        onValueChange('pause')(pause.toString());\n    }\n    \n    return <>\n        <Card>\n            <CardContent>\n            <   Typography variant=\"h5\">Plan an exercise</Typography>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <InputTextFieldWithValidation \n                            label=\"Name\" \n                            errorText=\"Name must have length between 1 and 99\"\n                            state={combinedStatus.name}\n                            value={exercise.name}\n                            onValueChange={onValueChange('name')}\n                            onValidationChange={onValidityChange('name')}\n                            minLength={combinedValidityParams.name.min}\n                            maxLength={combinedValidityParams.name.max}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <InputNumberFieldWithValidation \n                            label=\"Reps\" \n                            errorText=\"Should be an integer between 1 and 99\"\n                            state={combinedStatus.reps}\n                            value={exercise.reps}\n                            onValueChange={onValueChange('reps')}\n                            onValidityChange={onValidityChange('reps')}\n                            min={combinedValidityParams.reps.min}\n                            max={combinedValidityParams.reps.max}\n                            step={combinedValidityParams.reps.step}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <InputNumberFieldWithValidation \n                            label=\"Sets\" \n                            errorText=\"Should be an integer between 1 and 12\"\n                            state={combinedStatus.sets}\n                            value={exercise.sets}\n                            onValueChange={onValueChange('sets')}\n                            onValidityChange={onValidityChange('sets')}\n                            min={combinedValidityParams.sets.min}\n                            max={combinedValidityParams.sets.max}\n                            step={combinedValidityParams.sets.step}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <SelectNumberField \n                            label=\"Pause minutes\"\n                            possibleValues={limitsToArray(\n                                combinedValidityParams.pauseMinutes.min,\n                                combinedValidityParams.pauseMinutes.max,\n                                combinedValidityParams.pauseMinutes.step\n                            )}\n                            onValueChange={onMinutesChange}\n                            value={pauseMinutes}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <SelectNumberField \n                            label=\"Pause seconds\"\n                            possibleValues={limitsToArray(\n                                combinedValidityParams.pauseSeconds.min,\n                                combinedValidityParams.pauseSeconds.max,\n                                combinedValidityParams.pauseSeconds.step\n                            )}\n                            onValueChange={onSecondsChange}\n                            value={pauseSeconds}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <InputNumberFieldWithValidation \n                            label=\"Increment\" \n                            errorText=\"Should be between 0 and 10 with steps of 0.25\"\n                            state={combinedStatus.increment}\n                            value={exercise.increment}\n                            onValueChange={onValueChange('increment')}\n                            onValidityChange={onValidityChange('increment')}\n                            min={combinedValidityParams.increment.min}\n                            max={combinedValidityParams.increment.max}\n                            step={combinedValidityParams.increment.step}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <InputNumberFieldWithValidation \n                            label=\"Weight\" \n                            errorText=\"Should be between 1 and 999 with steps of 0.25\"\n                            state={combinedStatus.weight}\n                            value={exercise.weight}\n                            onValueChange={onValueChange('weight')}\n                            onValidityChange={onValidityChange('weight')}\n                            min={combinedValidityParams.weight.min}\n                            max={combinedValidityParams.weight.max}\n                            step={combinedValidityParams.weight.step}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Center>\n                            <BackButton onClick={onClickBack} />\n                            <SaveButton onClick={onClickSave} />\n                            {onClickDelete !== undefined && \n                                <DeleteButton onClick={onClickDelete} />\n                            }\n                        </Center>\n                    </Grid>\n                </Grid>\n\n            </CardContent>\n        </Card>\n    </>\n}\n\nexport default ExerciseForm;","import React, { useState } from 'react';\n\nimport { State } from \"./fields/state\";\nimport { Exercise } from '../../resources/firebase/exercises';\n\nimport ExerciseForm, { CombinedValidityParams, TemporaryExercise, CombinedStatus } from './ExerciseForm'\n\nconst combinedValidityParams: CombinedValidityParams = {\n    name: {min: 1, max: 99, step: 1},\n    reps: {min: 1, max: 99, step: 1},\n    sets: {min: 1, max: 12, step: 1}, \n    pauseMinutes: {min: 0, max: 6, step: 1},\n    pauseSeconds: {min: 0, max: 45, step: 15}, \n    increment: {min: 0, max: 10, step: 0.25},\n    weight: {min: 1, max: 999, step: 0.25}\n}\n\ninterface ExerciseFormWithValidationProps {\n    exercise?: Exercise\n    onClickBack: () => void\n    onClickSaveValidated: (exercise: Exercise) => void\n    onClickDeleteValidated?: () => void\n}\n\nconst ExerciseFormWithValidation = ({\n        exercise, \n        onClickBack, \n        onClickSaveValidated,\n        onClickDeleteValidated\n    }: ExerciseFormWithValidationProps) => {\n\n    let initialExercise: TemporaryExercise;\n    let initialCombinedStatus: CombinedStatus;\n    if(exercise === undefined){\n        initialExercise = {\n            name: '',\n            reps: undefined, \n            sets: undefined, \n            pause: 0, \n            increment: undefined,\n            weight: undefined\n        };\n        initialCombinedStatus = {\n            name: State.PRIMARY,\n            reps: State.PRIMARY, \n            sets: State.PRIMARY, \n            pause: State.SUCCESS, \n            increment: State.PRIMARY, \n            weight: State.PRIMARY\n        };\n    }\n    else {\n        initialExercise = exercise;\n        initialCombinedStatus = {\n            name: State.SUCCESS,\n            reps: State.SUCCESS, \n            sets: State.SUCCESS, \n            pause: State.SUCCESS, \n            increment: State.SUCCESS, \n            weight: State.SUCCESS\n        }\n    }\n    const [temporaryExercise, setTemporaryExercise] = useState(initialExercise); \n    const [combinedStatus, setCombinedStatus] = useState(initialCombinedStatus)\n\n    const onValueChange = (prop: keyof Exercise) => (value: string) => {\n        setTemporaryExercise({ ...temporaryExercise, [prop]: value });\n    }\n\n    const onValidityChange = (prop: keyof Exercise) => (toStatus: State) => {\n        setCombinedStatus({...combinedStatus, [prop]: toStatus})\n    }\n\n    const isFieldValid = (prop: keyof Exercise) => {\n        const currentStatus: State = combinedStatus[prop];\n        if(currentStatus === State.SUCCESS){\n            return true;\n        }\n        return false;\n    }\n\n    const areAllValid: () => boolean = () => {\n        return isFieldValid('name')\n            && isFieldValid('reps')\n            && isFieldValid('sets')\n            && isFieldValid('increment')\n            && isFieldValid('weight')\n    }\n\n    const onClickSave = () => {\n        if(areAllValid()){\n            onClickSaveValidated(temporaryExercise as Exercise);\n        }\n    }\n    const onClickDelete = onClickDeleteValidated === undefined ? undefined : () => {\n        if(areAllValid()){\n            onClickDeleteValidated();\n        }\n    }\n    \n    return <>\n        <ExerciseForm    \n            exercise={temporaryExercise}\n            combinedStatus={combinedStatus}\n            combinedValidityParams={combinedValidityParams}\n            onValueChange={onValueChange}\n            onValidityChange={onValidityChange}\n            onClickBack={onClickBack}\n            onClickSave={onClickSave}\n            onClickDelete={onClickDelete}\n        />\n    </>\n}\n\nexport default ExerciseFormWithValidation;","import React from 'react';\nimport { Edit } from '@material-ui/icons';\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    bigButton: {\n        fontSize: \"3rem\"\n    }\n});\n\ninterface EditButtonProps {\n    onClick?: () => void\n}\n\nconst EditButton = ({onClick}: EditButtonProps) => {\n    const classes = useStyles();\n\n    return <>\n        <IconButton\n            onClick={onClick}\n        >\n            <Edit \n                color=\"primary\" \n                fontSize=\"large\" \n                className={classes.bigButton} \n            />\n        </IconButton>\n    </>\n}\n\nexport default EditButton;","import React, { useState } from 'react';\n\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\nimport { Exercise } from '../../resources/firebase/exercises';\nimport ExerciseFormWithValidation from './ExerciseFormWithValidation';\nimport EditButton from '../buttons/EditButton';\nimport AddButton from '../buttons/AddButton';\n\ninterface ExerciseFormWithDialogsAndValidationProps {\n    exercise?: Exercise\n    onClickBack: () => void\n    onClickAdd: (exercise: Exercise) => void\n    onClickEdit?: (exercise: Exercise) => void\n    onClickDelete?: () => void\n}\n\nconst ExerciseFormWithDialogsAndValidation = ({\n        exercise, \n        onClickBack, \n        onClickAdd, \n        onClickEdit, \n        onClickDelete\n    }: ExerciseFormWithDialogsAndValidationProps) => {\n    \n    const shouldConfirmSaving = onClickEdit !== undefined;\n    \n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const onCloseDeleteDialog = () => {\n        setIsDeleteDialogOpen(false);\n    }\n    const onClickDeleteValidated = () => {\n        setIsDeleteDialogOpen(true);\n    }\n    const onClickConfirmedDelete = () => {\n        if(onClickDelete !== undefined){\n            onClickDelete();\n            onClickBack();\n        }\n    }\n    \n    const [exerciseToPossiblySave, setExerciseToPossibleSave] = useState(undefined as Exercise | undefined);\n    const isSaveDialogOpen = exerciseToPossiblySave !== undefined;\n\n    const onCloseSaveDialog = () => {\n        setExerciseToPossibleSave(undefined);\n    }\n    const onClickSaveValidated = (exercise: Exercise) => {\n        if(shouldConfirmSaving){\n            setExerciseToPossibleSave(exercise);\n        }\n        else {\n            onClickAdd(exercise);\n            onClickBack();\n        }\n    }\n\n    const onClickConfirmedEdit = () => {\n        if(exerciseToPossiblySave !== undefined && onClickEdit!== undefined){\n            onClickEdit(exerciseToPossiblySave);\n            onClickBack();\n        }\n    }\n\n    const onClickConfirmedAdd = () => {\n        if(exerciseToPossiblySave !== undefined){\n            onClickAdd(exerciseToPossiblySave);\n            onClickBack();\n        }\n    }\n\n    return <>\n        <ExerciseFormWithValidation    \n            exercise={exercise}\n            onClickBack={onClickBack}\n            onClickSaveValidated={onClickSaveValidated}\n            onClickDeleteValidated={onClickDeleteValidated}\n        />\n\n        <Dialog\n            open={isDeleteDialogOpen}\n            onClose={onCloseDeleteDialog}\n        >\n            <DialogTitle>{\"Are you sure you want to delete this exercise?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={onClickConfirmedDelete} variant=\"contained\" color=\"primary\">\n                    Yes\n                </Button>\n                <Button onClick={onCloseDeleteDialog} variant=\"contained\">\n                    No\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        {shouldConfirmSaving &&\n            <Dialog\n                open={isSaveDialogOpen}\n                onClose={onCloseSaveDialog}\n            >\n                <DialogTitle>{\"Create new or edit?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can choose between creating a new exercise \n                        or editing the exercise you clicked. \n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <AddButton onClick={onClickConfirmedAdd} />\n                    <EditButton onClick={onClickConfirmedEdit} />\n                </DialogActions>\n            </Dialog>\n        }\n    </>\n}\n\nexport default ExerciseFormWithDialogsAndValidation;","import React, { useState } from 'react';\nimport { Card, CardContent, Typography, Grid, Box, CircularProgress, CardActionArea } from '@material-ui/core';\n\nimport AddButton from '../components/buttons/AddButton'\nimport Center from '../components/Center'\nimport ExerciseFormWithDialogsAndValidation from '../components/forms/ExerciseFormWithDialogsAndValidation'\nimport { useStoredExercises, Exercise, StoredExercise, addExerciseToStore, editExerciseInStore, deleteExerciseFromStore } from '../resources/firebase/exercises'\n\ninterface ExerciseParameterProps {\n    name: string, \n    value: string\n}\n\nconst ExerciseParameter = ({name, value}: ExerciseParameterProps) => {\n    return <>\n        <Typography component={'span'}>\n            <Box fontWeight=\"fontWeightBold\" display=\"inline\">\n                {name + \": \"}\n            </Box>\n        </Typography>\n        <Typography component={'span'}>\n            {value}\n        </Typography>\n    </>\n}\n\ninterface ExerciseCardProps {\n    storedExercise: StoredExercise\n    onClick: (storedExercise: StoredExercise) => void\n\n}\n\nconst ExerciseCard = ({storedExercise, onClick}: ExerciseCardProps) => {\n    const exercise = storedExercise.exercise;\n\n    return <>\n        <Card>\n            <CardActionArea onClick={() => {onClick(storedExercise)}}>\n                <CardContent>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <Typography gutterBottom variant=\"h5\">\n                                {exercise.name}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ExerciseParameter name=\"Reps\" value={exercise.reps.toString()} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ExerciseParameter name=\"Sets\" value={exercise.sets.toString()} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ExerciseParameter name=\"Pause\" value={exercise.pause.toString() + \"s\"} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ExerciseParameter name=\"Increment\" value={exercise.increment.toString() + \"kg\"} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <ExerciseParameter name=\"Weight\" value={exercise.weight.toString() + \"kg\"} />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    </>\n}\n\nconst Exercises = () => {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const [selectedExercise, setSelectedExercise] = useState(undefined as unknown as StoredExercise)\n\n    const storedExercises = useStoredExercises();\n\n    const onClickOpen = () => {\n        setSelectedExercise(undefined as unknown as StoredExercise);\n        setIsFormOpen(true);\n    }\n    const onClickExercise = (storedExxercise: StoredExercise) => {\n        setSelectedExercise(storedExxercise);\n        setIsFormOpen(true);\n    }\n\n    const onClickFormBack = () => {\n        setIsFormOpen(false);\n    }\n    const onClickFormAdd = (exercise: Exercise) => {\n        console.log(\"Adding exercise: \")\n        console.log(exercise)\n\n        addExerciseToStore(exercise)\n    }\n    const onClickFormEdit = (exercise: Exercise) => {\n        console.log(\"Editing exercise: \")\n        console.log(exercise)\n\n        const newStoredExercise: StoredExercise = {\n            id: selectedExercise.id,\n            exercise: exercise\n        }\n\n        editExerciseInStore(newStoredExercise)\n    }\n    const onClickFormDelete = () => {\n        console.log(\"Deleting exercise: \")\n        console.log(selectedExercise)\n\n        deleteExerciseFromStore(selectedExercise)\n    }\n\n    if(isFormOpen){\n        if(selectedExercise === undefined){\n            return <ExerciseFormWithDialogsAndValidation \n                onClickBack={onClickFormBack} \n                onClickAdd={onClickFormAdd}\n            />\n        }\n        else {\n            return <ExerciseFormWithDialogsAndValidation \n                exercise={selectedExercise.exercise}\n                onClickBack={onClickFormBack} \n                onClickAdd={onClickFormAdd}\n                onClickEdit={onClickFormEdit}\n                onClickDelete={onClickFormDelete}\n            />\n        }\n    }\n\n    return <>\n        <Box mt={1}>\n            <Grid container spacing={3}>\n                {storedExercises &&\n                    storedExercises.map((storedExercise) => {\n                        return <Grid item \n                            key={storedExercise.id}\n                            xs={12} sm={6} md={4} lg={4} xl={3}\n                        >\n                            <ExerciseCard \n                                storedExercise={storedExercise} \n                                onClick={onClickExercise}\n                            />\n                        </Grid>\n                    })\n                }\n                <Grid item xs={12}>\n                    <Center>\n                        {!storedExercises &&\n                            <CircularProgress />\n                        }\n                        {storedExercises &&\n                            <AddButton onClick={onClickOpen} />\n                        }\n                    </Center>\n                </Grid>\n            </Grid>\n        </Box>\n    </>\n}\n\nexport default Exercises;\n","import { useState, useEffect } from 'react';\nimport firebase from './firebase';\n\nexport interface Exercise { \n    name: string, \n    reps: number, \n    sets: number, \n    pause: number, \n    increment: number, \n    weight: number\n}\n\ninterface ExerciseDoc extends Exercise {\n    uid: string\n}\n\nexport interface StoredExercise {\n    id: string,\n    exercise: Exercise\n}\n\nexport const useStoredExercises = () => {\n    const [exercises, setExercises] = useState(undefined as unknown as StoredExercise[]);\n    \n    useEffect(() => {\n        const user = firebase.auth().currentUser;\n        if(user !== null){\n            const unsubscribe = firebase\n                .firestore()\n                .collection('exercises')\n                .where('uid', '==', user.uid)\n                .onSnapshot((snapshot) => {\n                    const exercises: StoredExercise[] = snapshot.docs.map((doc) => {\n                        return {\n                            id: doc.id, \n                            exercise: doc.data()\n                        } as StoredExercise\n                    })\n\n                    setExercises(exercises);\n                })\n            return () => unsubscribe();\n        }\n    }, [])\n\n    return exercises; \n}\n\nexport const addExerciseToStore = (exercise: Exercise) => {\n    const user = firebase.auth().currentUser;\n    if(user !== null){\n        const exerciseDoc: ExerciseDoc = {\n            ...exercise,\n            uid: user.uid\n        }\n        return firebase\n            .firestore()\n            .collection('exercises')\n            .add(exerciseDoc)\n    }\n}\n\nexport const editExerciseInStore = (storedExercise: StoredExercise) => {\n    const user = firebase.auth().currentUser;\n    if(user !== null){\n        const exerciseDoc: ExerciseDoc = {\n            ...storedExercise.exercise,\n            uid: user.uid\n        }\n        return firebase\n            .firestore()\n            .collection(\"exercises\")\n            .doc(storedExercise.id)\n            .update(exerciseDoc)\n    }\n}\n\nexport const deleteExerciseFromStore = (storedExercise: StoredExercise) => {\n    const user = firebase.auth().currentUser;\n    if(user !== null){\n        return firebase\n            .firestore()\n            .collection(\"exercises\")\n            .doc(storedExercise.id)\n            .delete()\n    }\n}\n","import React from 'react';\nimport { Button, makeStyles, Typography, Container } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst usePageNotFoundStyle = makeStyles({\n    container: {\n        textAlign: \"center\"\n    }\n})\n\nconst PageNotFound = () => {\n    const classes = usePageNotFoundStyle();\n\n    return <>\n        <Container className={classes.container}>\n            <PageNotFoundContent />\n        </Container>\n    </>\n}\n\nconst PageNotFoundContent = () => {\n    return <>\n        <Typography variant=\"h5\">\n            No content found\n        </Typography>\n        <Typography paragraph>\n            This page does not seem to have any content. Consider returning to an other page. \n        </Typography>\n        <Button \n            color=\"primary\" \n            variant=\"contained\"\n            component={Link} \n            to=\"/overview\"\n        >\n            Overview\n        </Button>\n    </>\n}\n\nexport default PageNotFound;","import React, { ReactNode } from 'react';\r\nimport {Container as MUIContainer, Box} from '@material-ui/core'\r\n\r\ninterface ContainerProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Container = ({children}: ContainerProps) => {\r\n    return <>\r\n        <Box mt={2}>\r\n            <MUIContainer>\r\n                <>{children}</>\r\n            </MUIContainer>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect } from 'react';\nimport {StyledFirebaseAuth} from 'react-firebaseui'\nimport firebase from '../resources/firebase/firebase';\nimport { Typography, CircularProgress, makeStyles, Container } from '@material-ui/core';\nimport 'firebase/auth';\nimport * as firebaseui from 'firebaseui';\n\ninterface LoginProps {\n    children: React.ReactNode\n}\n\nconst Login = ({children}: LoginProps) => {\n    const [user, setUser] = useState<firebase.User | null | undefined>(undefined);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            setUser(user);\n            console.log('User: ', user)\n        });\n    }, []);\n\n    if(user === undefined){\n        return <>\n            <LoginWaiting />\n        </>\n    }\n    else if(user === null){\n        return <>\n            <LoginPrompt />\n        </>\n    }\n    else {\n        return <>\n            {children}\n        </>\n    }\n};\n\nconst useStyle = makeStyles({\n    container: {\n        textAlign: \"center\"\n    }\n});\n\nconst LoginWaiting = () => {\n    const classes = useStyle();\n\n    return <>\n        <Container className={classes.container}>\n            <Typography paragraph>\n                Please wait while you are being logged in...\n            </Typography>\n            <CircularProgress />\n        </Container>\n    </>\n};\n\nconst LoginPrompt = () => {\n    const classes = useStyle();\n\n    const uiConfig: firebaseui.auth.Config = {\n        autoUpgradeAnonymousUsers: true, \n        signInFlow: 'popup', \n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID, \n            firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\n        ], \n        callbacks: {\n            signInFailure: function(error: firebaseui.auth.AuthUIError) {\n                if (error.code === 'firebaseui/anonymous-upgrade-merge-conflict') {\n                    console.log(`Encountered anonymous upgrade merge conflict. `)\n                    var cred = error.credential;\n                    return firebase.auth().signInWithCredential(cred).then();\n                }\n                return Promise.resolve()\n            }\n        }\n    };\n\n    return <>\n        <Container className={classes.container}>\n            <Typography variant=\"h5\">\n                Please sign-in:\n            </Typography>\n            <StyledFirebaseAuth \n                uiConfig={uiConfig} \n                firebaseAuth={firebase.auth()} \n            />\n        </Container>\n    </>\n};\n\nexport default Login;","import { createMuiTheme } from '@material-ui/core/styles';\nimport { grey, blue } from '@material-ui/core/colors';\n\n// Colors: https://material-ui.com/customization/color/\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[500],  // '#2196f3', \n            dark: blue[800]\n        },\n        background: {\n            default: blue[50]\n        },\n        text: {\n            primary: grey[600]\n        }\n    }\n});\n","import React from 'react';\nimport NavBar from './components/navbar/Navbar';\nimport Overview from './pages/Overview';\nimport Exercises from './pages/Exercises';\nimport PageNotFound from './pages/PageNotFound';\nimport Container from './components/Container'\nimport Login from './components/Login'\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'\n\nimport {theme} from './resources/theme'\nimport 'typeface-roboto';\n\nfunction App() {\n\treturn <>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Login>\n\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<ChooseRoute />\n\t\t\t\t\t</Container>\n\t\t\t\t</BrowserRouter>\n\t\t\t</Login>\n\t\t</ThemeProvider>\n\t</>;\n}\n\nconst ChooseRoute = () => {\n\treturn <>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" >\n\t\t\t\t<Redirect to=\"/overview\" />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/overview\">\n\t\t\t\t<Overview />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/exercises\">\n\t\t\t\t<Exercises />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<PageNotFound />\n\t\t\t</Route>\n\t\t</Switch>\n\t</>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}