{"version":3,"sources":["components/forms/InputField.tsx","components/navbar/Navbar.tsx","pages/Overview.tsx","components/buttons/AddButton.tsx","components/Center.tsx","components/forms/SelectField.tsx","components/buttons/BackButton.tsx","components/buttons/EditButton.tsx","components/buttons/DeleteButton.tsx","components/forms/ExerciseForm.tsx","resources/firebase/firebase.ts","pages/Exercises.tsx","resources/firebase/exercises.tsx","pages/PageNotFound.tsx","components/Container.tsx","resources/theme.tsx","App.tsx","serviceWorker.ts","index.tsx","resources/img/logo_gears_drawing_192.png"],"names":["State","useStyles","makeStyles","theme","grow","flexGrow","sideNavMenu","width","sideMenuImage","margin","pageNames","lastPartOfPath","path","pathParts","split","length","capitalizeFirstLetter","text","charAt","toUpperCase","slice","FixedAppBar","children","AppBar","position","Toolbar","SideMenuButton","useState","isOpen","setIsOpen","classes","toggleIsOpen","Hidden","lgUp","IconButton","color","aria-label","onClick","Menu","SwipeableDrawer","anchor","open","onClose","onOpen","className","List","ListItem","src","customFitLogo","alt","map","pageName","key","button","component","Link","to","process","ListItemText","primary","MenuItems","mdDown","Button","NavBar","location","useLocation","lowerCaseLocationName","pathname","locationName","includes","Typography","variant","Overview","bigButton","fontSize","AddButton","AddCircle","centerContent","display","alignItems","justifyContent","Center","styledBy","property","mapping","props","palette","main","error","success","borderBottomColor","borderColor","InputField","label","errorText","state","inputType","value","onChange","min","max","step","undefined","FormControl","required","fullWidth","InputLabel","Input","type","inputProps","FormHelperText","ERROR","SelectField","possibleValues","Select","MenuItem","BackButton","ArrowBack","EditButton","Edit","DeleteButton","Delete","combinedValidityParams","name","reps","sets","increment","weight","isValidNumber","prop","validityParams","ExerciseForm","storedExercise","onClickBack","onClickAddVerified","onClickEditVerified","onClickDeleteVerified","initialExercise","exercise","pause","exerciseState","setExerciseState","initialCombinedStatus","PRIMARY","combinedStatus","setCombinedStatus","onInputChange","event","target","valueNumber","SUCCESS","validateForm","nameStatus","repsStatus","setsStatus","incrementStatus","weightStatus","areAllValid","onClickAdd","onClickEdit","editedStoredExercise","id","onClickDelete","Grid","container","spacing","item","xs","minutes","Math","floor","toString","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ExerciseParameter","Box","fontWeight","ExerciseCard","Card","CardActionArea","CardContent","gutterBottom","Exercises","isFormOpen","setIsFormOpen","selectedExercise","setSelectedExercise","storedExercises","exercises","setExercises","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","docs","doc","data","useStoredExercises","onClickExercise","storedExxercise","onClickFormBack","onClickFormAdd","console","log","add","addExerciseToStore","update","editExerciseInStore","delete","deleteExerciseFromStore","mt","sm","md","lg","xl","CircularProgress","usePageNotFoundStyle","textAlign","PageNotFoundContent","paragraph","PageNotFound","Container","createMuiTheme","blue","dark","background","default","grey","ChooseRoute","exact","App","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.735632a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FormControl, InputLabel, Input, FormHelperText, makeStyles, Theme } from '@material-ui/core';\r\n\r\nexport enum State {\r\n    PRIMARY = \"primary\",\r\n    ERROR = \"error\",\r\n    SUCCESS = \"success\"\r\n}\r\n\r\ninterface StateMapping {\r\n    primary: string,\r\n    error: string,\r\n    success: string,\r\n    [key: string]: any\r\n}\r\n\r\ninterface StyleProps {\r\n    state: State,\r\n    [key: string]: any\r\n}\r\n\r\nconst styledBy = (property: string, mapping: StateMapping) => (props: StyleProps) =>\r\n  mapping[props[property]];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    primary: {\r\n        '& label.Mui-focused': {\r\n          color: styledBy('state', {\r\n              primary: theme.palette.primary.main,\r\n              error: theme.palette.error.main,\r\n              success: theme.palette.success.main,\r\n          }),\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: styledBy('state', {\r\n                primary: theme.palette.primary.main,\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        }, \r\n        // Colors when not in focus: \r\n        '& .MuiInput-underline:before': {\r\n            borderColor: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& .MuiInput-underline:hover:before': {\r\n            borderColor: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& label': {\r\n            color: styledBy('state', {\r\n                primary: '',\r\n                error: theme.palette.error.main,\r\n                success: theme.palette.success.main,\r\n            })\r\n        },\r\n        '& .MuiFormHelperText-root': {\r\n            color: theme.palette.error.main\r\n        },\r\n    }\r\n}));\r\n\r\ninterface InputFieldProps {\r\n    label?: string\r\n    errorText?: string\r\n    state?: State\r\n    inputType?: string\r\n    value?: string | number\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n    min?: number\r\n    max?: number\r\n    step?: number\r\n}\r\n\r\nconst InputField = ({label, errorText, state, inputType, value, onChange, min, max, step}: InputFieldProps) => {\r\n    const styleProps: StyleProps | undefined = state === undefined ? undefined : {state: state};\r\n    const classes = useStyles(styleProps);\r\n    \r\n    return <>\r\n        <FormControl \r\n            required\r\n            className={classes.primary}\r\n            fullWidth={true}\r\n        >\r\n            {label !== undefined && \r\n                <InputLabel>{label}</InputLabel>\r\n            }\r\n            <Input \r\n                type={inputType} \r\n                value={value === undefined ? '' : value}\r\n                onChange={onChange}\r\n                inputProps={{\r\n                    min: min,\r\n                    max: max,\r\n                    step: step\r\n                }}\r\n            />\r\n            <FormHelperText>\r\n                {state !== undefined && state === State.ERROR && \r\n                    errorText\r\n                }\r\n            </FormHelperText>\r\n        </FormControl>\r\n    </>\r\n}\r\n\r\nexport default InputField;\r\n","import React, { useState } from 'react';\r\nimport { \r\n    AppBar, \r\n    Toolbar, \r\n    IconButton, \r\n    Typography, \r\n    Hidden, \r\n    Button, \r\n    makeStyles, \r\n    SwipeableDrawer, \r\n    ListItem, \r\n    List, \r\n    ListItemText\r\n} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons'\r\n\r\nimport customFitLogo from '../../resources/img/logo_gears_drawing_192.png'\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sideNavMenu: {\r\n        width: 250\r\n    },\r\n    sideMenuImage: {\r\n        width: \"40%\",\r\n        margin: \"auto\"\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    const lowerCaseLocationName = lastPartOfPath(location.pathname);\r\n    let locationName = \"\";\r\n    if(pageNames.includes(lowerCaseLocationName)) {\r\n        locationName = capitalizeFirstLetter(lowerCaseLocationName);\r\n    }\r\n    \r\n    return <>\r\n        <FixedAppBar>\r\n            <SideMenuButton />\r\n            <Typography variant=\"h5\">\r\n                {locationName}\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <MenuItems />\r\n        </FixedAppBar>\r\n    </>\r\n}\r\n\r\nconst pageNames = [\"overview\", \"routines\", \"exercises\", \"stats\", \"settings\"];\r\n\r\nconst lastPartOfPath = (path: string) => {\r\n    const pathParts = path.split(\"/\");\r\n    return pathParts[pathParts.length - 1]\r\n}\r\n\r\nconst capitalizeFirstLetter = (text: string) => {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n\r\ninterface FixedAppBarProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst FixedAppBar = ({children}: FixedAppBarProps) => {\r\n    // The last toolbar takes up the space under the appbar\r\n    return <>\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                {children}\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Toolbar />\r\n    </>\r\n}\r\n\r\nconst SideMenuButton = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const toggleIsOpen = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return <>\r\n        <Hidden lgUp>\r\n            <IconButton \r\n                color=\"inherit\" \r\n                aria-label=\"menu\"\r\n                onClick={toggleIsOpen}\r\n            >\r\n                <Menu />\r\n            </IconButton>\r\n        </Hidden>\r\n        <SwipeableDrawer\r\n            anchor=\"left\"\r\n            open={isOpen}\r\n            onClose={() => setIsOpen(false)}\r\n            onOpen={() => setIsOpen(true)}\r\n            className={classes.sideNavMenu}\r\n        >   \r\n            <List>\r\n                <ListItem>\r\n                    <img \r\n                        className={classes.sideMenuImage}\r\n                        src={customFitLogo} \r\n                        alt=\"Custom Fit logo\" \r\n                    />\r\n                </ListItem>\r\n                {pageNames.map(pageName => {\r\n                    return <ListItem \r\n                                key={pageName} \r\n                                button \r\n                                component={Link} \r\n                                to={process.env.PUBLIC_URL + '/' + pageName}\r\n                                onClick={toggleIsOpen}\r\n                            >\r\n                        <ListItemText primary={capitalizeFirstLetter(pageName)} />\r\n                    </ListItem>\r\n                })}\r\n                \r\n            </List>\r\n        </SwipeableDrawer>\r\n    </>\r\n}\r\n\r\nconst MenuItems = () => {\r\n    return <>\r\n        <Hidden mdDown>\r\n            {pageNames.map(pageName => {\r\n                return <Button \r\n                            key={pageName} \r\n                            color=\"inherit\"\r\n                            component={Link} \r\n                            to={process.env.PUBLIC_URL + '/' + pageName}\r\n                        >\r\n                    {capitalizeFirstLetter(pageName)}\r\n                </Button>\r\n            })}\r\n        </Hidden>\r\n    </>\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Overview = () => {\r\n    return <>\r\n        0 This is an overview <br/>\r\n        1 This is an overview <br/>\r\n        2 This is an overview <br/>\r\n        3 This is an overview <br/>\r\n        4 This is an overview <br/>\r\n        5 This is an overview <br/>\r\n        6 This is an overview <br/>\r\n        7 This is an overview <br/>\r\n        8 This is an overview <br/>\r\n        9 This is an overview <br/>\r\n        10 This is an overview <br/>\r\n        11 This is an overview <br/>\r\n        12 This is an overview <br/>\r\n        13 This is an overview <br/>\r\n        14 This is an overview <br/>\r\n        15 This is an overview <br/>\r\n        16 This is an overview <br/>\r\n        17 This is an overview <br/>\r\n        18 This is an overview <br/>\r\n        19 This is an overview <br/>\r\n        20 This is an overview <br/>\r\n        21 This is an overview <br/>\r\n        22 This is an overview <br/>\r\n        23 This is an overview <br/>\r\n        24 This is an overview <br/>\r\n        25 This is an overview <br/>\r\n        26 This is an overview <br/>\r\n        27 This is an overview <br/>\r\n        28 This is an overview <br/>\r\n        29 This is an overview <br/>\r\n        30 This is an overview <br/>\r\n        31 This is an overview <br/>\r\n        32 This is an overview <br/>\r\n        33 This is an overview <br/>\r\n        34 This is an overview <br/>\r\n        35 This is an overview <br/>\r\n        36 This is an overview <br/>\r\n        37 This is an overview <br/>\r\n        38 This is an overview <br/>\r\n        39 This is an overview <br/>\r\n    </>\r\n}\r\n\r\nconst isToday = (someDate: Date) => {\r\n    const today = new Date(); \r\n    return someDate.getDate() === today.getDate() &&\r\n        someDate.getMonth() === today.getMonth() &&\r\n        someDate.getFullYear() === today.getFullYear()\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface AddButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst AddButton = ({onClick}: AddButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <AddCircle \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default AddButton;\r\n","import React, { ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    centerContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\ninterface CenterProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Center = ({children}: CenterProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <div className={classes.centerContent}>\r\n            {children}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Center;\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\ninterface SelectFieldProps {\r\n    label?: string,\r\n    possibleValues: string[], \r\n    value?: string, \r\n    onChange?: (event: React.ChangeEvent<{ value: unknown }>) => void\r\n}\r\n\r\nconst SelectField = ({label, possibleValues, value, onChange}: SelectFieldProps) => {\r\n    return <>\r\n        <FormControl \r\n            required\r\n            fullWidth={true}\r\n        >\r\n            {label !== undefined && \r\n                <InputLabel>{label}</InputLabel>\r\n            }\r\n            <Select\r\n                value={value === undefined ? possibleValues[0] : value}\r\n                onChange={onChange}\r\n            >\r\n                {\r\n                    possibleValues.map(value => {\r\n                        return <MenuItem value={value} key={value}>\r\n                            {value}\r\n                        </MenuItem>\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    </>\r\n}\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface BackButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst BackButton = ({onClick}: BackButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <ArrowBack \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default BackButton;","import React from 'react';\r\nimport { Edit } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface EditButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst EditButton = ({onClick}: EditButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <Edit \r\n                color=\"primary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    bigButton: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\ninterface DeleteButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst DeleteButton = ({onClick}: DeleteButtonProps) => {\r\n    const classes = useStyles();\r\n\r\n    return <>\r\n        <IconButton\r\n            onClick={onClick}\r\n        >\r\n            <Delete \r\n                color=\"secondary\" \r\n                fontSize=\"large\" \r\n                className={classes.bigButton} \r\n            />\r\n        </IconButton>\r\n    </>\r\n}\r\n\r\nexport default DeleteButton;","import React, { useState } from 'react';\r\n\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport InputField, { State } from './InputField'\r\nimport SelectField from './SelectField'\r\nimport AddButton from '../buttons/AddButton';\r\nimport BackButton from '../buttons/BackButton';\r\nimport EditButton from '../buttons/EditButton';\r\nimport DeleteButton from '../buttons/DeleteButton';\r\nimport Center from '../Center';\r\nimport { Exercise, StoredExercise } from '../../resources/firebase/exercises';\r\ninterface CombinedStatus {\r\n    name: State\r\n    reps: State\r\n    sets: State\r\n    increment: State\r\n    weight: State\r\n}\r\n\r\ninterface ValidityParams {\r\n    min: number,\r\n    max: number,\r\n    step: number\r\n}\r\n\r\ninterface CombinedValidityParams {\r\n    name: ValidityParams\r\n    reps: ValidityParams\r\n    sets: ValidityParams\r\n    increment: ValidityParams\r\n    weight: ValidityParams\r\n}\r\n\r\nconst combinedValidityParams: CombinedValidityParams = {\r\n    name: {min: 1, max: 99, step: 1},\r\n    reps: {min: 1, max: 99, step: 1},\r\n    sets: {min: 1, max: 12, step: 1}, \r\n    increment: {min: 0, max: 10, step: 0.25},\r\n    weight: {min: 1, max: 999, step: 0.25}\r\n}\r\n\r\nconst isValidNumber = (prop: keyof CombinedValidityParams, value:  number | undefined) => {\r\n    if(value === undefined) return false;\r\n\r\n    const validityParams = combinedValidityParams[prop]\r\n    \r\n    if(value >= validityParams.min && value <= validityParams.max){\r\n        if(value % validityParams.step === 0){\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\ninterface ExerciseFormProps {\r\n    storedExercise?: StoredExercise\r\n    onClickBack: () => void\r\n    onClickAddVerified: (exercise: Exercise) => void\r\n    onClickEditVerified?: (storedExercise: StoredExercise) => void\r\n    onClickDeleteVerified?: (storedExercise: StoredExercise) => void\r\n}\r\n\r\nconst ExerciseForm = ({storedExercise, onClickBack, onClickAddVerified, onClickEditVerified, onClickDeleteVerified}: ExerciseFormProps) => {\r\n    const initialExercise = storedExercise !== undefined ? storedExercise.exercise : {\r\n        name: '',\r\n        reps: undefined, \r\n        sets: undefined, \r\n        pause: 0, \r\n        increment: undefined,\r\n        weight: undefined\r\n    };\r\n    const [exerciseState, setExerciseState] = useState(initialExercise); \r\n    const initialCombinedStatus: CombinedStatus = {\r\n        name: State.PRIMARY,\r\n        reps: State.PRIMARY, \r\n        sets: State.PRIMARY, \r\n        increment: State.PRIMARY, \r\n        weight: State.PRIMARY\r\n    }\r\n    const [combinedStatus, setCombinedStatus] = useState(initialCombinedStatus)\r\n\r\n    const onInputChange = (prop: keyof CombinedStatus) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setExerciseState({ ...exerciseState, [prop]: value });\r\n\r\n        if(combinedStatus[prop] !== State.PRIMARY){\r\n            const valueNumber: number = event.target.type === \"text\" ? value.length : +value;\r\n            if(isValidNumber(prop, valueNumber)){\r\n                setCombinedStatus({...combinedStatus, [prop]: State.SUCCESS})\r\n            }\r\n            else{\r\n                setCombinedStatus({...combinedStatus, [prop]: State.ERROR})\r\n            }\r\n        }\r\n    };\r\n\r\n    const onMinutesChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const minutes = +(event.target.value as string);\r\n        const pause = exerciseState.pause % 60 + 60 * minutes;\r\n        setExerciseState({ ...exerciseState, pause: pause });\r\n    }\r\n\r\n    const onSecondsChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const minutes = Math.floor(exerciseState.pause / 60);\r\n        const seconds = +(event.target.value as string);\r\n        const pause = 60 * minutes + seconds;\r\n        setExerciseState({ ...exerciseState, pause: pause });\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let nameStatus = State.PRIMARY;\r\n        if(!isValidNumber('name', exerciseState.name.length)){\r\n            nameStatus = State.ERROR;\r\n        }\r\n        let repsStatus = State.PRIMARY;\r\n        if(!isValidNumber('reps', exerciseState.reps)){\r\n            repsStatus = State.ERROR;\r\n        }\r\n        let setsStatus = State.PRIMARY;\r\n        if(!isValidNumber('sets', exerciseState.sets)){\r\n            setsStatus = State.ERROR;\r\n        }\r\n        let incrementStatus = State.PRIMARY;\r\n        if(!isValidNumber('increment', exerciseState.increment)){\r\n            incrementStatus = State.ERROR;\r\n        }\r\n        let weightStatus = State.PRIMARY;\r\n        if(!isValidNumber('weight', exerciseState.weight)){\r\n            weightStatus = State.ERROR;\r\n        }\r\n        setCombinedStatus({\r\n            name: nameStatus,\r\n            reps: repsStatus,\r\n            sets: setsStatus,\r\n            increment: incrementStatus,\r\n            weight: weightStatus\r\n        })\r\n    }\r\n\r\n    const areAllValid: () => boolean = () => {\r\n        return isValidNumber('name', exerciseState.name.length)\r\n            && isValidNumber('reps', exerciseState.reps)\r\n            && isValidNumber('sets', exerciseState.sets)\r\n            && isValidNumber('increment', exerciseState.increment)\r\n            && isValidNumber('weight', exerciseState.weight)\r\n    }\r\n\r\n    const onClickAdd = onClickAddVerified === undefined ? undefined : () => {\r\n        if(areAllValid()){\r\n            onClickAddVerified(exerciseState as Exercise);\r\n            onClickBack();\r\n        }\r\n        else{\r\n            validateForm();\r\n        }\r\n    }\r\n    const onClickEdit = onClickEditVerified === undefined ? undefined : () => {\r\n        if(areAllValid()){\r\n            const editedStoredExercise: StoredExercise = {\r\n                id: (storedExercise as unknown as StoredExercise).id,\r\n                exercise: exerciseState as Exercise\r\n            }\r\n            onClickEditVerified(editedStoredExercise);\r\n            onClickBack();\r\n        }\r\n        else{\r\n            validateForm();\r\n        }\r\n    }\r\n    const onClickDelete = onClickDeleteVerified === undefined ? undefined : () => {\r\n        if(areAllValid()){\r\n            onClickDeleteVerified(storedExercise as unknown as StoredExercise);\r\n            onClickBack();\r\n        }\r\n        else{\r\n            validateForm();\r\n        }\r\n    }\r\n    \r\n    return <>\r\n        <Typography variant=\"h5\">Plan an exercise</Typography>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <InputField \r\n                    label=\"Name\" \r\n                    errorText=\"Name must have length between 1 and 99\"\r\n                    state={combinedStatus.name}\r\n                    inputType=\"text\"\r\n                    value={exerciseState.name}\r\n                    onChange={onInputChange('name')}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <InputField \r\n                    label=\"Reps\" \r\n                    errorText=\"Should be an integer between 1 and 99\"\r\n                    state={combinedStatus.reps}\r\n                    inputType=\"number\"\r\n                    min={1}\r\n                    max={99}\r\n                    step={1}\r\n                    value={exerciseState.reps}\r\n                    onChange={onInputChange('reps')}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <InputField \r\n                    label=\"Sets\" \r\n                    errorText=\"Should be an integer between 1 and 12\"\r\n                    state={combinedStatus.sets}\r\n                    inputType=\"number\"\r\n                    min={1}\r\n                    max={12}\r\n                    step={1}\r\n                    value={exerciseState.sets}\r\n                    onChange={onInputChange('sets')}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <SelectField \r\n                    label=\"Pause minutes\"\r\n                    possibleValues={['0', '1', '2', '3', '4', '5', '6']}\r\n                    onChange={onMinutesChange}\r\n                    value={Math.floor(exerciseState.pause / 60).toString()}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <SelectField \r\n                    label=\"Pause seconds\"\r\n                    possibleValues={['0', '15', '30', '45']}\r\n                    onChange={onSecondsChange}\r\n                    value={(exerciseState.pause % 60).toString()}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <InputField \r\n                    label=\"Increment\" \r\n                    errorText=\"Should be between 0 and 10 with steps of 0.25\"\r\n                    state={combinedStatus.increment}\r\n                    inputType=\"number\"\r\n                    min={0}\r\n                    max={10}\r\n                    step={0.25}\r\n                    value={exerciseState.increment}\r\n                    onChange={onInputChange('increment')}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <InputField \r\n                    label=\"Weight\" \r\n                    errorText=\"Should be between 1 and 999 with steps of 0.25\"\r\n                    state={combinedStatus.weight}\r\n                    inputType=\"number\"\r\n                    min={1}\r\n                    max={999}\r\n                    step={0.25}\r\n                    value={exerciseState.weight}\r\n                    onChange={onInputChange('weight')}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Center>\r\n                    <BackButton onClick={onClickBack} />\r\n                    <AddButton onClick={onClickAdd} />\r\n                    {onClickEdit !== undefined && \r\n                        <EditButton onClick={onClickEdit} />\r\n                    }\r\n                    {onClickDelete !== undefined && \r\n                        <DeleteButton onClick={onClickDelete} />\r\n                    }\r\n                </Center>\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nexport default ExerciseForm;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSsGGNtbJKdWhAJ-x8PCZpN5JIZii8x7M\",\r\n    authDomain: \"custom-fit-885d7.firebaseapp.com\",\r\n    databaseURL: \"https://custom-fit-885d7.firebaseio.com\",\r\n    projectId: \"custom-fit-885d7\",\r\n    storageBucket: \"custom-fit-885d7.appspot.com\",\r\n    messagingSenderId: \"504159396672\",\r\n    appId: \"1:504159396672:web:b995f81e096087eb\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport { Card, CardContent, Typography, Grid, Box, CircularProgress, CardActionArea } from '@material-ui/core';\r\n\r\nimport AddButton from '../components/buttons/AddButton'\r\nimport Center from '../components/Center'\r\nimport ExerciseForm from '../components/forms/ExerciseForm'\r\nimport { useStoredExercises, Exercise, StoredExercise, addExerciseToStore, editExerciseInStore, deleteExerciseFromStore } from '../resources/firebase/exercises'\r\n\r\ninterface ExerciseParameterProps {\r\n    name: string, \r\n    value: string\r\n}\r\n\r\nconst ExerciseParameter = ({name, value}: ExerciseParameterProps) => {\r\n    return <>\r\n        <Typography component={'span'}>\r\n            <Box fontWeight=\"fontWeightBold\" display=\"inline\">\r\n                {name + \": \"}\r\n            </Box>\r\n        </Typography>\r\n        <Typography component={'span'}>\r\n            {value}\r\n        </Typography>\r\n    </>\r\n}\r\n\r\ninterface ExerciseCardProps {\r\n    storedExercise: StoredExercise\r\n    onClick: (storedExercise: StoredExercise) => void\r\n\r\n}\r\n\r\nconst ExerciseCard = ({storedExercise, onClick}: ExerciseCardProps) => {\r\n    const exercise = storedExercise.exercise;\r\n\r\n    return <>\r\n        <Card>\r\n            <CardActionArea onClick={() => {onClick(storedExercise)}}>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Typography gutterBottom variant=\"h5\">\r\n                                {exercise.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Reps\" value={exercise.reps.toString()} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Sets\" value={exercise.sets.toString()} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Pause\" value={exercise.pause.toString() + \"s\"} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Increment\" value={exercise.increment.toString() + \"kg\"} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ExerciseParameter name=\"Weight\" value={exercise.weight.toString() + \"kg\"} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nconst Exercises = () => {\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    const [selectedExercise, setSelectedExercise] = useState(undefined as unknown as StoredExercise)\r\n\r\n    const storedExercises = useStoredExercises();\r\n\r\n    const onClickOpen = () => {\r\n        setSelectedExercise(undefined as unknown as StoredExercise);\r\n        setIsFormOpen(true);\r\n    }\r\n    const onClickExercise = (storedExxercise: StoredExercise) => {\r\n        setSelectedExercise(storedExxercise);\r\n        setIsFormOpen(true);\r\n    }\r\n\r\n    const onClickFormBack = () => {\r\n        setIsFormOpen(false);\r\n    }\r\n    const onClickFormAdd = (exercise: Exercise) => {\r\n        console.log(\"Adding exercise: \")\r\n        console.log(exercise)\r\n\r\n        addExerciseToStore(exercise)\r\n    }\r\n    const onClickFormEdit = (storedExercise: StoredExercise) => {\r\n        console.log(\"Editing exercise: \")\r\n        console.log(storedExercise)\r\n\r\n        editExerciseInStore(storedExercise)\r\n    }\r\n    const onClickFormDelete = (storedExercise: StoredExercise) => {\r\n        console.log(\"Deleting exercise: \")\r\n        console.log(storedExercise)\r\n\r\n        deleteExerciseFromStore(storedExercise)\r\n    }\r\n\r\n    if(isFormOpen){\r\n        if(selectedExercise === undefined){\r\n            return <ExerciseForm \r\n                onClickBack={onClickFormBack} \r\n                onClickAddVerified={onClickFormAdd}\r\n            />\r\n        }\r\n        else {\r\n            return <ExerciseForm \r\n                storedExercise={selectedExercise}\r\n                onClickBack={onClickFormBack} \r\n                onClickAddVerified={onClickFormAdd}\r\n                onClickEditVerified={onClickFormEdit}\r\n                onClickDeleteVerified={onClickFormDelete}\r\n            />\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Box mt={1}>\r\n            <Grid container spacing={3}>\r\n                {storedExercises &&\r\n                    storedExercises.map((storedExercise) => {\r\n                        return <Grid item \r\n                            key={storedExercise.id}\r\n                            xs={12} sm={6} md={4} lg={4} xl={3}\r\n                        >\r\n                            <ExerciseCard \r\n                                storedExercise={storedExercise} \r\n                                onClick={onClickExercise}\r\n                            />\r\n                        </Grid>\r\n                    })\r\n                }\r\n                <Grid item xs={12}>\r\n                    <Center>\r\n                        {!storedExercises &&\r\n                            <CircularProgress />\r\n                        }\r\n                        {storedExercises &&\r\n                            <AddButton onClick={onClickOpen} />\r\n                        }\r\n                    </Center>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Exercises;\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from './firebase';\r\n\r\nexport interface Exercise { \r\n    name: string, \r\n    reps: number, \r\n    sets: number, \r\n    pause: number, \r\n    increment: number, \r\n    weight: number\r\n}\r\n\r\nexport interface StoredExercise {\r\n    id: string,\r\n    exercise: Exercise\r\n}\r\n\r\nexport const useStoredExercises = () => {\r\n    const [exercises, setExercises] = useState(undefined as unknown as StoredExercise[]);\r\n    \r\n    useEffect(() => {\r\n        const unsubscribe = firebase\r\n            .firestore()\r\n            .collection('exercises')\r\n            .onSnapshot((snapshot) => {\r\n                const exercises: StoredExercise[] = snapshot.docs.map((doc) => {\r\n                    return {\r\n                        id: doc.id, \r\n                        exercise: doc.data()\r\n                    } as StoredExercise\r\n                })\r\n\r\n                setExercises(exercises);\r\n            })\r\n        return () => unsubscribe();\r\n    }, [])\r\n\r\n    return exercises; \r\n}\r\n\r\nexport const addExerciseToStore = (exercise: Exercise) => {\r\n    return firebase\r\n        .firestore()\r\n        .collection('exercises')\r\n        .add(exercise)\r\n}\r\n\r\nexport const editExerciseInStore = (storedExercise: StoredExercise) => {\r\n    return firebase\r\n        .firestore()\r\n        .collection(\"exercises\")\r\n        .doc(storedExercise.id)\r\n        .update(storedExercise.exercise)\r\n}\r\n\r\nexport const deleteExerciseFromStore = (storedExercise: StoredExercise) => {\r\n    return firebase\r\n        .firestore()\r\n        .collection(\"exercises\")\r\n        .doc(storedExercise.id)\r\n        .delete()\r\n}\r\n","import React from 'react';\r\nimport { Button, makeStyles, Typography, Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst usePageNotFoundStyle = makeStyles({\r\n    container: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst PageNotFound = () => {\r\n    const classes = usePageNotFoundStyle();\r\n\r\n    return <>\r\n        <Container className={classes.container}>\r\n            <PageNotFoundContent />\r\n        </Container>\r\n    </>\r\n}\r\n\r\nconst PageNotFoundContent = () => {\r\n    return <>\r\n        <Typography variant=\"h5\">\r\n            No content found\r\n        </Typography>\r\n        <Typography paragraph>\r\n            This page does not seem to have any content. Consider returning to an other page. \r\n        </Typography>\r\n        <Button \r\n            color=\"primary\" \r\n            variant=\"contained\"\r\n            component={Link} \r\n            to={process.env.PUBLIC_URL + '/overview'}\r\n        >\r\n            Overview\r\n        </Button>\r\n    </>\r\n}\r\n\r\nexport default PageNotFound;","import React, { ReactNode } from 'react';\r\nimport {Container as MUIContainer, Box} from '@material-ui/core'\r\n\r\ninterface ContainerProps {\r\n    children: ReactNode\r\n}\r\n\r\nconst Container = ({children}: ContainerProps) => {\r\n    return <>\r\n        <Box mt={2}>\r\n            <MUIContainer>\r\n                {children}\r\n            </MUIContainer>\r\n        </Box>\r\n    </>\r\n}\r\n\r\nexport default Container;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey, blue } from '@material-ui/core/colors';\r\n\r\n// Colors: https://material-ui.com/customization/color/\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[500],  // '#2196f3', \r\n            dark: blue[800]\r\n        },\r\n        background: {\r\n            default: blue[50]\r\n        },\r\n        text: {\r\n            primary: grey[600]\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport NavBar from './components/navbar/Navbar';\r\nimport Overview from './pages/Overview';\r\nimport Exercises from './pages/Exercises';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Container from './components/Container'\r\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport {theme} from './resources/theme'\r\nimport 'typeface-roboto';\r\n\r\nfunction App() {\r\n\treturn <>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Router>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<ChooseRoute />\r\n\t\t\t\t</Container>\r\n\t\t\t</Router>\r\n\t\t</ThemeProvider>\r\n\t</>;\r\n}\r\n\r\nconst ChooseRoute = () => {\r\n\treturn <>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL} >\r\n\t\t\t\t<Redirect to={process.env.PUBLIC_URL + '/overview'} />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/overview'}>\r\n\t\t\t\t<Overview />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={process.env.PUBLIC_URL + '/exercises'}>\r\n\t\t\t\t<Exercises />\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<PageNotFound />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t</>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_gears_drawing_192.817771b7.png\";"],"sourceRoot":""}